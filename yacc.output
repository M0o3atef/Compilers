Grammar

    0 $accept: program $end

    1 program: function

    2 function: function stmt
    3         | /* empty */

    4 stmt: DEF IDENTIFIER AS INT VAR '=' expr ';'
    5     | DEF IDENTIFIER AS FLOAT VAR '=' expr ';'
    6     | DEF IDENTIFIER AS STRING VAR '=' expr ';'
    7     | DEF IDENTIFIER AS INT CONST '=' expr ';'
    8     | DEF IDENTIFIER AS FLOAT CONST '=' expr ';'
    9     | DEF IDENTIFIER AS STRING CONST '=' expr ';'
   10     | ';'
   11     | expr ';'
   12     | PRINT expr ';'
   13     | IDENTIFIER '=' expr ';'
   14     | WHILE '(' expr ')' stmt
   15     | IF '(' expr ')' stmt
   16     | IF '(' expr ')' stmt ELSE stmt
   17     | '{' stmt_list '}'

   18 stmt_list: stmt
   19          | stmt_list stmt

   20 expr: INTNUM
   21     | FLOATNUM
   22     | QUOTESTRING
   23     | IDENTIFIER
   24     | '-' expr
   25     | expr '+' expr
   26     | expr '-' expr
   27     | expr '*' expr
   28     | expr '/' expr
   29     | expr '<' expr
   30     | expr '>' expr
   31     | expr GE expr
   32     | expr LE expr
   33     | expr NE expr
   34     | expr EQ expr
   35     | '(' expr ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 14 15 16 35
')' (41) 14 15 16 35
'*' (42) 27
'+' (43) 25
'-' (45) 24 26
'/' (47) 28
';' (59) 4 5 6 7 8 9 10 11 12 13
'<' (60) 29
'=' (61) 4 5 6 7 8 9 13
'>' (62) 30
'{' (123) 17
'}' (125) 17
error (256)
DEF (258) 4 5 6 7 8 9
AS (259) 4 5 6 7 8 9
VAR (260) 4 5 6
CONST (261) 7 8 9
INT (262) 4 7
FLOAT (263) 5 8
STRING (264) 6 9
INTNUM (265) 20
FLOATNUM (266) 21
QUOTESTRING (267) 22
IDENTIFIER (268) 4 5 6 7 8 9 13 23
WHILE (269) 14
IF (270) 15 16
PRINT (271) 12
IFX (272)
ELSE (273) 16
NE (274) 33
EQ (275) 34
LE (276) 32
GE (277) 31
UMINUS (278)


Nonterminals, with rules where they appear

$accept (36)
    on left: 0
program (37)
    on left: 1, on right: 0
function (38)
    on left: 2 3, on right: 1 2
stmt (39)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17, on right: 2 14 15
    16 18 19
stmt_list (40)
    on left: 18 19, on right: 17 19
expr (41)
    on left: 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35, on right:
    4 5 6 7 8 9 11 12 13 14 15 16 24 25 26 27 28 29 30 31 32 33 34
    35


state 0

    0 $accept: . program $end

    $default  reduce using rule 3 (function)

    program   go to state 1
    function  go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    1 program: function .
    2 function: function . stmt

    DEF          shift, and go to state 4
    INTNUM       shift, and go to state 5
    FLOATNUM     shift, and go to state 6
    QUOTESTRING  shift, and go to state 7
    IDENTIFIER   shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    '-'          shift, and go to state 12
    ';'          shift, and go to state 13
    '('          shift, and go to state 14
    '{'          shift, and go to state 15

    $default  reduce using rule 1 (program)

    stmt  go to state 16
    expr  go to state 17


state 3

    0 $accept: program $end .

    $default  accept


state 4

    4 stmt: DEF . IDENTIFIER AS INT VAR '=' expr ';'
    5     | DEF . IDENTIFIER AS FLOAT VAR '=' expr ';'
    6     | DEF . IDENTIFIER AS STRING VAR '=' expr ';'
    7     | DEF . IDENTIFIER AS INT CONST '=' expr ';'
    8     | DEF . IDENTIFIER AS FLOAT CONST '=' expr ';'
    9     | DEF . IDENTIFIER AS STRING CONST '=' expr ';'

    IDENTIFIER  shift, and go to state 18


state 5

   20 expr: INTNUM .

    $default  reduce using rule 20 (expr)


state 6

   21 expr: FLOATNUM .

    $default  reduce using rule 21 (expr)


state 7

   22 expr: QUOTESTRING .

    $default  reduce using rule 22 (expr)


state 8

   13 stmt: IDENTIFIER . '=' expr ';'
   23 expr: IDENTIFIER .

    '='  shift, and go to state 19

    $default  reduce using rule 23 (expr)


state 9

   14 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 20


state 10

   15 stmt: IF . '(' expr ')' stmt
   16     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 21


state 11

   12 stmt: PRINT . expr ';'

    INTNUM       shift, and go to state 5
    FLOATNUM     shift, and go to state 6
    QUOTESTRING  shift, and go to state 7
    IDENTIFIER   shift, and go to state 22
    '-'          shift, and go to state 12
    '('          shift, and go to state 14

    expr  go to state 23


state 12

   24 expr: '-' . expr

    INTNUM       shift, and go to state 5
    FLOATNUM     shift, and go to state 6
    QUOTESTRING  shift, and go to state 7
    IDENTIFIER   shift, and go to state 22
    '-'          shift, and go to state 12
    '('          shift, and go to state 14

    expr  go to state 24


state 13

   10 stmt: ';' .

    $default  reduce using rule 10 (stmt)


state 14

   35 expr: '(' . expr ')'

    INTNUM       shift, and go to state 5
    FLOATNUM     shift, and go to state 6
    QUOTESTRING  shift, and go to state 7
    IDENTIFIER   shift, and go to state 22
    '-'          shift, and go to state 12
    '('          shift, and go to state 14

    expr  go to state 25


state 15

   17 stmt: '{' . stmt_list '}'

    DEF          shift, and go to state 4
    INTNUM       shift, and go to state 5
    FLOATNUM     shift, and go to state 6
    QUOTESTRING  shift, and go to state 7
    IDENTIFIER   shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    '-'          shift, and go to state 12
    ';'          shift, and go to state 13
    '('          shift, and go to state 14
    '{'          shift, and go to state 15

    stmt       go to state 26
    stmt_list  go to state 27
    expr       go to state 17


state 16

    2 function: function stmt .

    $default  reduce using rule 2 (function)


state 17

   11 stmt: expr . ';'
   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . '<' expr
   30     | expr . '>' expr
   31     | expr . GE expr
   32     | expr . LE expr
   33     | expr . NE expr
   34     | expr . EQ expr

    '>'  shift, and go to state 28
    '<'  shift, and go to state 29
    NE   shift, and go to state 30
    EQ   shift, and go to state 31
    LE   shift, and go to state 32
    GE   shift, and go to state 33
    '+'  shift, and go to state 34
    '-'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37
    ';'  shift, and go to state 38


state 18

    4 stmt: DEF IDENTIFIER . AS INT VAR '=' expr ';'
    5     | DEF IDENTIFIER . AS FLOAT VAR '=' expr ';'
    6     | DEF IDENTIFIER . AS STRING VAR '=' expr ';'
    7     | DEF IDENTIFIER . AS INT CONST '=' expr ';'
    8     | DEF IDENTIFIER . AS FLOAT CONST '=' expr ';'
    9     | DEF IDENTIFIER . AS STRING CONST '=' expr ';'

    AS  shift, and go to state 39


state 19

   13 stmt: IDENTIFIER '=' . expr ';'

    INTNUM       shift, and go to state 5
    FLOATNUM     shift, and go to state 6
    QUOTESTRING  shift, and go to state 7
    IDENTIFIER   shift, and go to state 22
    '-'          shift, and go to state 12
    '('          shift, and go to state 14

    expr  go to state 40


state 20

   14 stmt: WHILE '(' . expr ')' stmt

    INTNUM       shift, and go to state 5
    FLOATNUM     shift, and go to state 6
    QUOTESTRING  shift, and go to state 7
    IDENTIFIER   shift, and go to state 22
    '-'          shift, and go to state 12
    '('          shift, and go to state 14

    expr  go to state 41


state 21

   15 stmt: IF '(' . expr ')' stmt
   16     | IF '(' . expr ')' stmt ELSE stmt

    INTNUM       shift, and go to state 5
    FLOATNUM     shift, and go to state 6
    QUOTESTRING  shift, and go to state 7
    IDENTIFIER   shift, and go to state 22
    '-'          shift, and go to state 12
    '('          shift, and go to state 14

    expr  go to state 42


state 22

   23 expr: IDENTIFIER .

    $default  reduce using rule 23 (expr)


state 23

   12 stmt: PRINT expr . ';'
   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . '<' expr
   30     | expr . '>' expr
   31     | expr . GE expr
   32     | expr . LE expr
   33     | expr . NE expr
   34     | expr . EQ expr

    '>'  shift, and go to state 28
    '<'  shift, and go to state 29
    NE   shift, and go to state 30
    EQ   shift, and go to state 31
    LE   shift, and go to state 32
    GE   shift, and go to state 33
    '+'  shift, and go to state 34
    '-'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37
    ';'  shift, and go to state 43


state 24

   24 expr: '-' expr .
   25     | expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . '<' expr
   30     | expr . '>' expr
   31     | expr . GE expr
   32     | expr . LE expr
   33     | expr . NE expr
   34     | expr . EQ expr

    $default  reduce using rule 24 (expr)


state 25

   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . '<' expr
   30     | expr . '>' expr
   31     | expr . GE expr
   32     | expr . LE expr
   33     | expr . NE expr
   34     | expr . EQ expr
   35     | '(' expr . ')'

    '>'  shift, and go to state 28
    '<'  shift, and go to state 29
    NE   shift, and go to state 30
    EQ   shift, and go to state 31
    LE   shift, and go to state 32
    GE   shift, and go to state 33
    '+'  shift, and go to state 34
    '-'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37
    ')'  shift, and go to state 44


state 26

   18 stmt_list: stmt .

    $default  reduce using rule 18 (stmt_list)


state 27

   17 stmt: '{' stmt_list . '}'
   19 stmt_list: stmt_list . stmt

    DEF          shift, and go to state 4
    INTNUM       shift, and go to state 5
    FLOATNUM     shift, and go to state 6
    QUOTESTRING  shift, and go to state 7
    IDENTIFIER   shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    '-'          shift, and go to state 12
    ';'          shift, and go to state 13
    '('          shift, and go to state 14
    '{'          shift, and go to state 15
    '}'          shift, and go to state 45

    stmt  go to state 46
    expr  go to state 17


state 28

   30 expr: expr '>' . expr

    INTNUM       shift, and go to state 5
    FLOATNUM     shift, and go to state 6
    QUOTESTRING  shift, and go to state 7
    IDENTIFIER   shift, and go to state 22
    '-'          shift, and go to state 12
    '('          shift, and go to state 14

    expr  go to state 47


state 29

   29 expr: expr '<' . expr

    INTNUM       shift, and go to state 5
    FLOATNUM     shift, and go to state 6
    QUOTESTRING  shift, and go to state 7
    IDENTIFIER   shift, and go to state 22
    '-'          shift, and go to state 12
    '('          shift, and go to state 14

    expr  go to state 48


state 30

   33 expr: expr NE . expr

    INTNUM       shift, and go to state 5
    FLOATNUM     shift, and go to state 6
    QUOTESTRING  shift, and go to state 7
    IDENTIFIER   shift, and go to state 22
    '-'          shift, and go to state 12
    '('          shift, and go to state 14

    expr  go to state 49


state 31

   34 expr: expr EQ . expr

    INTNUM       shift, and go to state 5
    FLOATNUM     shift, and go to state 6
    QUOTESTRING  shift, and go to state 7
    IDENTIFIER   shift, and go to state 22
    '-'          shift, and go to state 12
    '('          shift, and go to state 14

    expr  go to state 50


state 32

   32 expr: expr LE . expr

    INTNUM       shift, and go to state 5
    FLOATNUM     shift, and go to state 6
    QUOTESTRING  shift, and go to state 7
    IDENTIFIER   shift, and go to state 22
    '-'          shift, and go to state 12
    '('          shift, and go to state 14

    expr  go to state 51


state 33

   31 expr: expr GE . expr

    INTNUM       shift, and go to state 5
    FLOATNUM     shift, and go to state 6
    QUOTESTRING  shift, and go to state 7
    IDENTIFIER   shift, and go to state 22
    '-'          shift, and go to state 12
    '('          shift, and go to state 14

    expr  go to state 52


state 34

   25 expr: expr '+' . expr

    INTNUM       shift, and go to state 5
    FLOATNUM     shift, and go to state 6
    QUOTESTRING  shift, and go to state 7
    IDENTIFIER   shift, and go to state 22
    '-'          shift, and go to state 12
    '('          shift, and go to state 14

    expr  go to state 53


state 35

   26 expr: expr '-' . expr

    INTNUM       shift, and go to state 5
    FLOATNUM     shift, and go to state 6
    QUOTESTRING  shift, and go to state 7
    IDENTIFIER   shift, and go to state 22
    '-'          shift, and go to state 12
    '('          shift, and go to state 14

    expr  go to state 54


state 36

   27 expr: expr '*' . expr

    INTNUM       shift, and go to state 5
    FLOATNUM     shift, and go to state 6
    QUOTESTRING  shift, and go to state 7
    IDENTIFIER   shift, and go to state 22
    '-'          shift, and go to state 12
    '('          shift, and go to state 14

    expr  go to state 55


state 37

   28 expr: expr '/' . expr

    INTNUM       shift, and go to state 5
    FLOATNUM     shift, and go to state 6
    QUOTESTRING  shift, and go to state 7
    IDENTIFIER   shift, and go to state 22
    '-'          shift, and go to state 12
    '('          shift, and go to state 14

    expr  go to state 56


state 38

   11 stmt: expr ';' .

    $default  reduce using rule 11 (stmt)


state 39

    4 stmt: DEF IDENTIFIER AS . INT VAR '=' expr ';'
    5     | DEF IDENTIFIER AS . FLOAT VAR '=' expr ';'
    6     | DEF IDENTIFIER AS . STRING VAR '=' expr ';'
    7     | DEF IDENTIFIER AS . INT CONST '=' expr ';'
    8     | DEF IDENTIFIER AS . FLOAT CONST '=' expr ';'
    9     | DEF IDENTIFIER AS . STRING CONST '=' expr ';'

    INT     shift, and go to state 57
    FLOAT   shift, and go to state 58
    STRING  shift, and go to state 59


state 40

   13 stmt: IDENTIFIER '=' expr . ';'
   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . '<' expr
   30     | expr . '>' expr
   31     | expr . GE expr
   32     | expr . LE expr
   33     | expr . NE expr
   34     | expr . EQ expr

    '>'  shift, and go to state 28
    '<'  shift, and go to state 29
    NE   shift, and go to state 30
    EQ   shift, and go to state 31
    LE   shift, and go to state 32
    GE   shift, and go to state 33
    '+'  shift, and go to state 34
    '-'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37
    ';'  shift, and go to state 60


state 41

   14 stmt: WHILE '(' expr . ')' stmt
   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . '<' expr
   30     | expr . '>' expr
   31     | expr . GE expr
   32     | expr . LE expr
   33     | expr . NE expr
   34     | expr . EQ expr

    '>'  shift, and go to state 28
    '<'  shift, and go to state 29
    NE   shift, and go to state 30
    EQ   shift, and go to state 31
    LE   shift, and go to state 32
    GE   shift, and go to state 33
    '+'  shift, and go to state 34
    '-'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37
    ')'  shift, and go to state 61


state 42

   15 stmt: IF '(' expr . ')' stmt
   16     | IF '(' expr . ')' stmt ELSE stmt
   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . '<' expr
   30     | expr . '>' expr
   31     | expr . GE expr
   32     | expr . LE expr
   33     | expr . NE expr
   34     | expr . EQ expr

    '>'  shift, and go to state 28
    '<'  shift, and go to state 29
    NE   shift, and go to state 30
    EQ   shift, and go to state 31
    LE   shift, and go to state 32
    GE   shift, and go to state 33
    '+'  shift, and go to state 34
    '-'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37
    ')'  shift, and go to state 62


state 43

   12 stmt: PRINT expr ';' .

    $default  reduce using rule 12 (stmt)


state 44

   35 expr: '(' expr ')' .

    $default  reduce using rule 35 (expr)


state 45

   17 stmt: '{' stmt_list '}' .

    $default  reduce using rule 17 (stmt)


state 46

   19 stmt_list: stmt_list stmt .

    $default  reduce using rule 19 (stmt_list)


state 47

   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . '<' expr
   30     | expr . '>' expr
   30     | expr '>' expr .
   31     | expr . GE expr
   32     | expr . LE expr
   33     | expr . NE expr
   34     | expr . EQ expr

    '+'  shift, and go to state 34
    '-'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37

    $default  reduce using rule 30 (expr)


state 48

   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . '<' expr
   29     | expr '<' expr .
   30     | expr . '>' expr
   31     | expr . GE expr
   32     | expr . LE expr
   33     | expr . NE expr
   34     | expr . EQ expr

    '+'  shift, and go to state 34
    '-'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37

    $default  reduce using rule 29 (expr)


state 49

   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . '<' expr
   30     | expr . '>' expr
   31     | expr . GE expr
   32     | expr . LE expr
   33     | expr . NE expr
   33     | expr NE expr .
   34     | expr . EQ expr

    '+'  shift, and go to state 34
    '-'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37

    $default  reduce using rule 33 (expr)


state 50

   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . '<' expr
   30     | expr . '>' expr
   31     | expr . GE expr
   32     | expr . LE expr
   33     | expr . NE expr
   34     | expr . EQ expr
   34     | expr EQ expr .

    '+'  shift, and go to state 34
    '-'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37

    $default  reduce using rule 34 (expr)


state 51

   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . '<' expr
   30     | expr . '>' expr
   31     | expr . GE expr
   32     | expr . LE expr
   32     | expr LE expr .
   33     | expr . NE expr
   34     | expr . EQ expr

    '+'  shift, and go to state 34
    '-'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37

    $default  reduce using rule 32 (expr)


state 52

   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . '<' expr
   30     | expr . '>' expr
   31     | expr . GE expr
   31     | expr GE expr .
   32     | expr . LE expr
   33     | expr . NE expr
   34     | expr . EQ expr

    '+'  shift, and go to state 34
    '-'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37

    $default  reduce using rule 31 (expr)


state 53

   25 expr: expr . '+' expr
   25     | expr '+' expr .
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . '<' expr
   30     | expr . '>' expr
   31     | expr . GE expr
   32     | expr . LE expr
   33     | expr . NE expr
   34     | expr . EQ expr

    '*'  shift, and go to state 36
    '/'  shift, and go to state 37

    $default  reduce using rule 25 (expr)


state 54

   25 expr: expr . '+' expr
   26     | expr . '-' expr
   26     | expr '-' expr .
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . '<' expr
   30     | expr . '>' expr
   31     | expr . GE expr
   32     | expr . LE expr
   33     | expr . NE expr
   34     | expr . EQ expr

    '*'  shift, and go to state 36
    '/'  shift, and go to state 37

    $default  reduce using rule 26 (expr)


state 55

   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   27     | expr '*' expr .
   28     | expr . '/' expr
   29     | expr . '<' expr
   30     | expr . '>' expr
   31     | expr . GE expr
   32     | expr . LE expr
   33     | expr . NE expr
   34     | expr . EQ expr

    $default  reduce using rule 27 (expr)


state 56

   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   28     | expr '/' expr .
   29     | expr . '<' expr
   30     | expr . '>' expr
   31     | expr . GE expr
   32     | expr . LE expr
   33     | expr . NE expr
   34     | expr . EQ expr

    $default  reduce using rule 28 (expr)


state 57

    4 stmt: DEF IDENTIFIER AS INT . VAR '=' expr ';'
    7     | DEF IDENTIFIER AS INT . CONST '=' expr ';'

    VAR    shift, and go to state 63
    CONST  shift, and go to state 64


state 58

    5 stmt: DEF IDENTIFIER AS FLOAT . VAR '=' expr ';'
    8     | DEF IDENTIFIER AS FLOAT . CONST '=' expr ';'

    VAR    shift, and go to state 65
    CONST  shift, and go to state 66


state 59

    6 stmt: DEF IDENTIFIER AS STRING . VAR '=' expr ';'
    9     | DEF IDENTIFIER AS STRING . CONST '=' expr ';'

    VAR    shift, and go to state 67
    CONST  shift, and go to state 68


state 60

   13 stmt: IDENTIFIER '=' expr ';' .

    $default  reduce using rule 13 (stmt)


state 61

   14 stmt: WHILE '(' expr ')' . stmt

    DEF          shift, and go to state 4
    INTNUM       shift, and go to state 5
    FLOATNUM     shift, and go to state 6
    QUOTESTRING  shift, and go to state 7
    IDENTIFIER   shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    '-'          shift, and go to state 12
    ';'          shift, and go to state 13
    '('          shift, and go to state 14
    '{'          shift, and go to state 15

    stmt  go to state 69
    expr  go to state 17


state 62

   15 stmt: IF '(' expr ')' . stmt
   16     | IF '(' expr ')' . stmt ELSE stmt

    DEF          shift, and go to state 4
    INTNUM       shift, and go to state 5
    FLOATNUM     shift, and go to state 6
    QUOTESTRING  shift, and go to state 7
    IDENTIFIER   shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    '-'          shift, and go to state 12
    ';'          shift, and go to state 13
    '('          shift, and go to state 14
    '{'          shift, and go to state 15

    stmt  go to state 70
    expr  go to state 17


state 63

    4 stmt: DEF IDENTIFIER AS INT VAR . '=' expr ';'

    '='  shift, and go to state 71


state 64

    7 stmt: DEF IDENTIFIER AS INT CONST . '=' expr ';'

    '='  shift, and go to state 72


state 65

    5 stmt: DEF IDENTIFIER AS FLOAT VAR . '=' expr ';'

    '='  shift, and go to state 73


state 66

    8 stmt: DEF IDENTIFIER AS FLOAT CONST . '=' expr ';'

    '='  shift, and go to state 74


state 67

    6 stmt: DEF IDENTIFIER AS STRING VAR . '=' expr ';'

    '='  shift, and go to state 75


state 68

    9 stmt: DEF IDENTIFIER AS STRING CONST . '=' expr ';'

    '='  shift, and go to state 76


state 69

   14 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 14 (stmt)


state 70

   15 stmt: IF '(' expr ')' stmt .
   16     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 77

    $default  reduce using rule 15 (stmt)


state 71

    4 stmt: DEF IDENTIFIER AS INT VAR '=' . expr ';'

    INTNUM       shift, and go to state 5
    FLOATNUM     shift, and go to state 6
    QUOTESTRING  shift, and go to state 7
    IDENTIFIER   shift, and go to state 22
    '-'          shift, and go to state 12
    '('          shift, and go to state 14

    expr  go to state 78


state 72

    7 stmt: DEF IDENTIFIER AS INT CONST '=' . expr ';'

    INTNUM       shift, and go to state 5
    FLOATNUM     shift, and go to state 6
    QUOTESTRING  shift, and go to state 7
    IDENTIFIER   shift, and go to state 22
    '-'          shift, and go to state 12
    '('          shift, and go to state 14

    expr  go to state 79


state 73

    5 stmt: DEF IDENTIFIER AS FLOAT VAR '=' . expr ';'

    INTNUM       shift, and go to state 5
    FLOATNUM     shift, and go to state 6
    QUOTESTRING  shift, and go to state 7
    IDENTIFIER   shift, and go to state 22
    '-'          shift, and go to state 12
    '('          shift, and go to state 14

    expr  go to state 80


state 74

    8 stmt: DEF IDENTIFIER AS FLOAT CONST '=' . expr ';'

    INTNUM       shift, and go to state 5
    FLOATNUM     shift, and go to state 6
    QUOTESTRING  shift, and go to state 7
    IDENTIFIER   shift, and go to state 22
    '-'          shift, and go to state 12
    '('          shift, and go to state 14

    expr  go to state 81


state 75

    6 stmt: DEF IDENTIFIER AS STRING VAR '=' . expr ';'

    INTNUM       shift, and go to state 5
    FLOATNUM     shift, and go to state 6
    QUOTESTRING  shift, and go to state 7
    IDENTIFIER   shift, and go to state 22
    '-'          shift, and go to state 12
    '('          shift, and go to state 14

    expr  go to state 82


state 76

    9 stmt: DEF IDENTIFIER AS STRING CONST '=' . expr ';'

    INTNUM       shift, and go to state 5
    FLOATNUM     shift, and go to state 6
    QUOTESTRING  shift, and go to state 7
    IDENTIFIER   shift, and go to state 22
    '-'          shift, and go to state 12
    '('          shift, and go to state 14

    expr  go to state 83


state 77

   16 stmt: IF '(' expr ')' stmt ELSE . stmt

    DEF          shift, and go to state 4
    INTNUM       shift, and go to state 5
    FLOATNUM     shift, and go to state 6
    QUOTESTRING  shift, and go to state 7
    IDENTIFIER   shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    '-'          shift, and go to state 12
    ';'          shift, and go to state 13
    '('          shift, and go to state 14
    '{'          shift, and go to state 15

    stmt  go to state 84
    expr  go to state 17


state 78

    4 stmt: DEF IDENTIFIER AS INT VAR '=' expr . ';'
   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . '<' expr
   30     | expr . '>' expr
   31     | expr . GE expr
   32     | expr . LE expr
   33     | expr . NE expr
   34     | expr . EQ expr

    '>'  shift, and go to state 28
    '<'  shift, and go to state 29
    NE   shift, and go to state 30
    EQ   shift, and go to state 31
    LE   shift, and go to state 32
    GE   shift, and go to state 33
    '+'  shift, and go to state 34
    '-'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37
    ';'  shift, and go to state 85


state 79

    7 stmt: DEF IDENTIFIER AS INT CONST '=' expr . ';'
   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . '<' expr
   30     | expr . '>' expr
   31     | expr . GE expr
   32     | expr . LE expr
   33     | expr . NE expr
   34     | expr . EQ expr

    '>'  shift, and go to state 28
    '<'  shift, and go to state 29
    NE   shift, and go to state 30
    EQ   shift, and go to state 31
    LE   shift, and go to state 32
    GE   shift, and go to state 33
    '+'  shift, and go to state 34
    '-'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37
    ';'  shift, and go to state 86


state 80

    5 stmt: DEF IDENTIFIER AS FLOAT VAR '=' expr . ';'
   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . '<' expr
   30     | expr . '>' expr
   31     | expr . GE expr
   32     | expr . LE expr
   33     | expr . NE expr
   34     | expr . EQ expr

    '>'  shift, and go to state 28
    '<'  shift, and go to state 29
    NE   shift, and go to state 30
    EQ   shift, and go to state 31
    LE   shift, and go to state 32
    GE   shift, and go to state 33
    '+'  shift, and go to state 34
    '-'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37
    ';'  shift, and go to state 87


state 81

    8 stmt: DEF IDENTIFIER AS FLOAT CONST '=' expr . ';'
   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . '<' expr
   30     | expr . '>' expr
   31     | expr . GE expr
   32     | expr . LE expr
   33     | expr . NE expr
   34     | expr . EQ expr

    '>'  shift, and go to state 28
    '<'  shift, and go to state 29
    NE   shift, and go to state 30
    EQ   shift, and go to state 31
    LE   shift, and go to state 32
    GE   shift, and go to state 33
    '+'  shift, and go to state 34
    '-'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37
    ';'  shift, and go to state 88


state 82

    6 stmt: DEF IDENTIFIER AS STRING VAR '=' expr . ';'
   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . '<' expr
   30     | expr . '>' expr
   31     | expr . GE expr
   32     | expr . LE expr
   33     | expr . NE expr
   34     | expr . EQ expr

    '>'  shift, and go to state 28
    '<'  shift, and go to state 29
    NE   shift, and go to state 30
    EQ   shift, and go to state 31
    LE   shift, and go to state 32
    GE   shift, and go to state 33
    '+'  shift, and go to state 34
    '-'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37
    ';'  shift, and go to state 89


state 83

    9 stmt: DEF IDENTIFIER AS STRING CONST '=' expr . ';'
   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . '<' expr
   30     | expr . '>' expr
   31     | expr . GE expr
   32     | expr . LE expr
   33     | expr . NE expr
   34     | expr . EQ expr

    '>'  shift, and go to state 28
    '<'  shift, and go to state 29
    NE   shift, and go to state 30
    EQ   shift, and go to state 31
    LE   shift, and go to state 32
    GE   shift, and go to state 33
    '+'  shift, and go to state 34
    '-'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37
    ';'  shift, and go to state 90


state 84

   16 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 16 (stmt)


state 85

    4 stmt: DEF IDENTIFIER AS INT VAR '=' expr ';' .

    $default  reduce using rule 4 (stmt)


state 86

    7 stmt: DEF IDENTIFIER AS INT CONST '=' expr ';' .

    $default  reduce using rule 7 (stmt)


state 87

    5 stmt: DEF IDENTIFIER AS FLOAT VAR '=' expr ';' .

    $default  reduce using rule 5 (stmt)


state 88

    8 stmt: DEF IDENTIFIER AS FLOAT CONST '=' expr ';' .

    $default  reduce using rule 8 (stmt)


state 89

    6 stmt: DEF IDENTIFIER AS STRING VAR '=' expr ';' .

    $default  reduce using rule 6 (stmt)


state 90

    9 stmt: DEF IDENTIFIER AS STRING CONST '=' expr ';' .

    $default  reduce using rule 9 (stmt)
