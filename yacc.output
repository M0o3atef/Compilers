Terminals unused in grammar

   UMINUS


Grammar

    0 $accept: program $end

    1 program: function

    2 function: function stmt
    3         | /* empty */

    4 stmt: DEF IDENTIFIER AS INT VAR '=' expr ';'
    5     | DEF IDENTIFIER AS FLOAT VAR '=' expr ';'
    6     | DEF IDENTIFIER AS STRING VAR '=' expr ';'
    7     | DEF IDENTIFIER AS INT CONST '=' expr ';'
    8     | DEF IDENTIFIER AS FLOAT CONST '=' expr ';'
    9     | DEF IDENTIFIER AS STRING CONST '=' expr ';'
   10     | ';'
   11     | PRINT expr ';'
   12     | IDENTIFIER '=' expr ';'
   13     | WHILE '(' logic_list ')' stmt
   14     | FOR '(' stmt logic_list ';' stmt ')' stmt
   15     | REPEAT stmt UNTIL '(' logic_list ')' ';'
   16     | SWITCH '(' expr ')' case_stmt
   17     | IF '(' logic_list ')' stmt
   18     | IF '(' logic_list ')' stmt ELSE stmt
   19     | '{' stmt_list '}'

   20 stmt_list: stmt
   21          | stmt_list stmt

   22 defult_stmt: DEFAULT stmt

   23 case_stmt: CASE '(' expr ')' stmt
   24          | '{' case_list '}'
   25          | '{' case_list defult_stmt '}'

   26 case_list: case_stmt
   27          | case_list case_stmt

   28 logic_expr: expr '<' expr
   29           | expr '>' expr
   30           | expr GE expr
   31           | expr LE expr
   32           | expr NE expr
   33           | expr EQ expr

   34 logic_list: logic_expr
   35           | logic_list '&' logic_expr
   36           | logic_list '|' logic_expr

   37 expr: INTNUM
   38     | FLOATNUM
   39     | QUOTESTRING
   40     | IDENTIFIER
   41     | expr '+' expr
   42     | expr '-' expr
   43     | expr '*' expr
   44     | expr '/' expr
   45     | '(' expr ')'


Terminals, with rules where they appear

$end (0) 0
'&' (38) 35
'(' (40) 13 14 15 16 17 18 23 45
')' (41) 13 14 15 16 17 18 23 45
'*' (42) 43
'+' (43) 41
'-' (45) 42
'/' (47) 44
';' (59) 4 5 6 7 8 9 10 11 12 14 15
'<' (60) 28
'=' (61) 4 5 6 7 8 9 12
'>' (62) 29
'{' (123) 19 24 25
'|' (124) 36
'}' (125) 19 24 25
error (256)
INTNUM (258) 37
FLOATNUM (259) 38
QUOTESTRING (260) 39
IDENTIFIER (261) 4 5 6 7 8 9 12 40
WHILE (262) 13
FOR (263) 14
REPEAT (264) 15
UNTIL (265) 15
SWITCH (266) 16
CASE (267) 23
DEFAULT (268) 22
IF (269) 17 18
PRINT (270) 11
DEF (271) 4 5 6 7 8 9
AS (272) 4 5 6 7 8 9
VAR (273) 4 5 6
CONST (274) 7 8 9
INT (275) 4 7
FLOAT (276) 5 8
STRING (277) 6 9
IFX (278)
ELSE (279) 18
NE (280) 32
EQ (281) 33
LE (282) 31
GE (283) 30
UMINUS (284)


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
program (45)
    on left: 1, on right: 0
function (46)
    on left: 2 3, on right: 1 2
stmt (47)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19, on right: 2
    13 14 15 17 18 20 21 22 23
stmt_list (48)
    on left: 20 21, on right: 19 21
defult_stmt (49)
    on left: 22, on right: 25
case_stmt (50)
    on left: 23 24 25, on right: 16 26 27
case_list (51)
    on left: 26 27, on right: 24 25 27
logic_expr (52)
    on left: 28 29 30 31 32 33, on right: 34 35 36
logic_list (53)
    on left: 34 35 36, on right: 13 14 15 17 18 35 36
expr (54)
    on left: 37 38 39 40 41 42 43 44 45, on right: 4 5 6 7 8 9 11 12
    16 23 28 29 30 31 32 33 41 42 43 44 45


state 0

    0 $accept: . program $end

    $default  reduce using rule 3 (function)

    program   go to state 1
    function  go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    1 program: function .
    2 function: function . stmt

    IDENTIFIER  shift, and go to state 4
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    REPEAT      shift, and go to state 7
    SWITCH      shift, and go to state 8
    IF          shift, and go to state 9
    PRINT       shift, and go to state 10
    DEF         shift, and go to state 11
    ';'         shift, and go to state 12
    '{'         shift, and go to state 13

    $default  reduce using rule 1 (program)

    stmt  go to state 14


state 3

    0 $accept: program $end .

    $default  accept


state 4

   12 stmt: IDENTIFIER . '=' expr ';'

    '='  shift, and go to state 15


state 5

   13 stmt: WHILE . '(' logic_list ')' stmt

    '('  shift, and go to state 16


state 6

   14 stmt: FOR . '(' stmt logic_list ';' stmt ')' stmt

    '('  shift, and go to state 17


state 7

   15 stmt: REPEAT . stmt UNTIL '(' logic_list ')' ';'

    IDENTIFIER  shift, and go to state 4
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    REPEAT      shift, and go to state 7
    SWITCH      shift, and go to state 8
    IF          shift, and go to state 9
    PRINT       shift, and go to state 10
    DEF         shift, and go to state 11
    ';'         shift, and go to state 12
    '{'         shift, and go to state 13

    stmt  go to state 18


state 8

   16 stmt: SWITCH . '(' expr ')' case_stmt

    '('  shift, and go to state 19


state 9

   17 stmt: IF . '(' logic_list ')' stmt
   18     | IF . '(' logic_list ')' stmt ELSE stmt

    '('  shift, and go to state 20


state 10

   11 stmt: PRINT . expr ';'

    INTNUM       shift, and go to state 21
    FLOATNUM     shift, and go to state 22
    QUOTESTRING  shift, and go to state 23
    IDENTIFIER   shift, and go to state 24
    '('          shift, and go to state 25

    expr  go to state 26


state 11

    4 stmt: DEF . IDENTIFIER AS INT VAR '=' expr ';'
    5     | DEF . IDENTIFIER AS FLOAT VAR '=' expr ';'
    6     | DEF . IDENTIFIER AS STRING VAR '=' expr ';'
    7     | DEF . IDENTIFIER AS INT CONST '=' expr ';'
    8     | DEF . IDENTIFIER AS FLOAT CONST '=' expr ';'
    9     | DEF . IDENTIFIER AS STRING CONST '=' expr ';'

    IDENTIFIER  shift, and go to state 27


state 12

   10 stmt: ';' .

    $default  reduce using rule 10 (stmt)


state 13

   19 stmt: '{' . stmt_list '}'

    IDENTIFIER  shift, and go to state 4
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    REPEAT      shift, and go to state 7
    SWITCH      shift, and go to state 8
    IF          shift, and go to state 9
    PRINT       shift, and go to state 10
    DEF         shift, and go to state 11
    ';'         shift, and go to state 12
    '{'         shift, and go to state 13

    stmt       go to state 28
    stmt_list  go to state 29


state 14

    2 function: function stmt .

    $default  reduce using rule 2 (function)


state 15

   12 stmt: IDENTIFIER '=' . expr ';'

    INTNUM       shift, and go to state 21
    FLOATNUM     shift, and go to state 22
    QUOTESTRING  shift, and go to state 23
    IDENTIFIER   shift, and go to state 24
    '('          shift, and go to state 25

    expr  go to state 30


state 16

   13 stmt: WHILE '(' . logic_list ')' stmt

    INTNUM       shift, and go to state 21
    FLOATNUM     shift, and go to state 22
    QUOTESTRING  shift, and go to state 23
    IDENTIFIER   shift, and go to state 24
    '('          shift, and go to state 25

    logic_expr  go to state 31
    logic_list  go to state 32
    expr        go to state 33


state 17

   14 stmt: FOR '(' . stmt logic_list ';' stmt ')' stmt

    IDENTIFIER  shift, and go to state 4
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    REPEAT      shift, and go to state 7
    SWITCH      shift, and go to state 8
    IF          shift, and go to state 9
    PRINT       shift, and go to state 10
    DEF         shift, and go to state 11
    ';'         shift, and go to state 12
    '{'         shift, and go to state 13

    stmt  go to state 34


state 18

   15 stmt: REPEAT stmt . UNTIL '(' logic_list ')' ';'

    UNTIL  shift, and go to state 35


state 19

   16 stmt: SWITCH '(' . expr ')' case_stmt

    INTNUM       shift, and go to state 21
    FLOATNUM     shift, and go to state 22
    QUOTESTRING  shift, and go to state 23
    IDENTIFIER   shift, and go to state 24
    '('          shift, and go to state 25

    expr  go to state 36


state 20

   17 stmt: IF '(' . logic_list ')' stmt
   18     | IF '(' . logic_list ')' stmt ELSE stmt

    INTNUM       shift, and go to state 21
    FLOATNUM     shift, and go to state 22
    QUOTESTRING  shift, and go to state 23
    IDENTIFIER   shift, and go to state 24
    '('          shift, and go to state 25

    logic_expr  go to state 31
    logic_list  go to state 37
    expr        go to state 33


state 21

   37 expr: INTNUM .

    $default  reduce using rule 37 (expr)


state 22

   38 expr: FLOATNUM .

    $default  reduce using rule 38 (expr)


state 23

   39 expr: QUOTESTRING .

    $default  reduce using rule 39 (expr)


state 24

   40 expr: IDENTIFIER .

    $default  reduce using rule 40 (expr)


state 25

   45 expr: '(' . expr ')'

    INTNUM       shift, and go to state 21
    FLOATNUM     shift, and go to state 22
    QUOTESTRING  shift, and go to state 23
    IDENTIFIER   shift, and go to state 24
    '('          shift, and go to state 25

    expr  go to state 38


state 26

   11 stmt: PRINT expr . ';'
   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr

    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42
    ';'  shift, and go to state 43


state 27

    4 stmt: DEF IDENTIFIER . AS INT VAR '=' expr ';'
    5     | DEF IDENTIFIER . AS FLOAT VAR '=' expr ';'
    6     | DEF IDENTIFIER . AS STRING VAR '=' expr ';'
    7     | DEF IDENTIFIER . AS INT CONST '=' expr ';'
    8     | DEF IDENTIFIER . AS FLOAT CONST '=' expr ';'
    9     | DEF IDENTIFIER . AS STRING CONST '=' expr ';'

    AS  shift, and go to state 44


state 28

   20 stmt_list: stmt .

    $default  reduce using rule 20 (stmt_list)


state 29

   19 stmt: '{' stmt_list . '}'
   21 stmt_list: stmt_list . stmt

    IDENTIFIER  shift, and go to state 4
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    REPEAT      shift, and go to state 7
    SWITCH      shift, and go to state 8
    IF          shift, and go to state 9
    PRINT       shift, and go to state 10
    DEF         shift, and go to state 11
    ';'         shift, and go to state 12
    '{'         shift, and go to state 13
    '}'         shift, and go to state 45

    stmt  go to state 46


state 30

   12 stmt: IDENTIFIER '=' expr . ';'
   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr

    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42
    ';'  shift, and go to state 47


state 31

   34 logic_list: logic_expr .

    $default  reduce using rule 34 (logic_list)


state 32

   13 stmt: WHILE '(' logic_list . ')' stmt
   35 logic_list: logic_list . '&' logic_expr
   36           | logic_list . '|' logic_expr

    ')'  shift, and go to state 48
    '&'  shift, and go to state 49
    '|'  shift, and go to state 50


state 33

   28 logic_expr: expr . '<' expr
   29           | expr . '>' expr
   30           | expr . GE expr
   31           | expr . LE expr
   32           | expr . NE expr
   33           | expr . EQ expr
   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr

    '>'  shift, and go to state 51
    '<'  shift, and go to state 52
    NE   shift, and go to state 53
    EQ   shift, and go to state 54
    LE   shift, and go to state 55
    GE   shift, and go to state 56
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42


state 34

   14 stmt: FOR '(' stmt . logic_list ';' stmt ')' stmt

    INTNUM       shift, and go to state 21
    FLOATNUM     shift, and go to state 22
    QUOTESTRING  shift, and go to state 23
    IDENTIFIER   shift, and go to state 24
    '('          shift, and go to state 25

    logic_expr  go to state 31
    logic_list  go to state 57
    expr        go to state 33


state 35

   15 stmt: REPEAT stmt UNTIL . '(' logic_list ')' ';'

    '('  shift, and go to state 58


state 36

   16 stmt: SWITCH '(' expr . ')' case_stmt
   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr

    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42
    ')'  shift, and go to state 59


state 37

   17 stmt: IF '(' logic_list . ')' stmt
   18     | IF '(' logic_list . ')' stmt ELSE stmt
   35 logic_list: logic_list . '&' logic_expr
   36           | logic_list . '|' logic_expr

    ')'  shift, and go to state 60
    '&'  shift, and go to state 49
    '|'  shift, and go to state 50


state 38

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | '(' expr . ')'

    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42
    ')'  shift, and go to state 61


state 39

   41 expr: expr '+' . expr

    INTNUM       shift, and go to state 21
    FLOATNUM     shift, and go to state 22
    QUOTESTRING  shift, and go to state 23
    IDENTIFIER   shift, and go to state 24
    '('          shift, and go to state 25

    expr  go to state 62


state 40

   42 expr: expr '-' . expr

    INTNUM       shift, and go to state 21
    FLOATNUM     shift, and go to state 22
    QUOTESTRING  shift, and go to state 23
    IDENTIFIER   shift, and go to state 24
    '('          shift, and go to state 25

    expr  go to state 63


state 41

   43 expr: expr '*' . expr

    INTNUM       shift, and go to state 21
    FLOATNUM     shift, and go to state 22
    QUOTESTRING  shift, and go to state 23
    IDENTIFIER   shift, and go to state 24
    '('          shift, and go to state 25

    expr  go to state 64


state 42

   44 expr: expr '/' . expr

    INTNUM       shift, and go to state 21
    FLOATNUM     shift, and go to state 22
    QUOTESTRING  shift, and go to state 23
    IDENTIFIER   shift, and go to state 24
    '('          shift, and go to state 25

    expr  go to state 65


state 43

   11 stmt: PRINT expr ';' .

    $default  reduce using rule 11 (stmt)


state 44

    4 stmt: DEF IDENTIFIER AS . INT VAR '=' expr ';'
    5     | DEF IDENTIFIER AS . FLOAT VAR '=' expr ';'
    6     | DEF IDENTIFIER AS . STRING VAR '=' expr ';'
    7     | DEF IDENTIFIER AS . INT CONST '=' expr ';'
    8     | DEF IDENTIFIER AS . FLOAT CONST '=' expr ';'
    9     | DEF IDENTIFIER AS . STRING CONST '=' expr ';'

    INT     shift, and go to state 66
    FLOAT   shift, and go to state 67
    STRING  shift, and go to state 68


state 45

   19 stmt: '{' stmt_list '}' .

    $default  reduce using rule 19 (stmt)


state 46

   21 stmt_list: stmt_list stmt .

    $default  reduce using rule 21 (stmt_list)


state 47

   12 stmt: IDENTIFIER '=' expr ';' .

    $default  reduce using rule 12 (stmt)


state 48

   13 stmt: WHILE '(' logic_list ')' . stmt

    IDENTIFIER  shift, and go to state 4
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    REPEAT      shift, and go to state 7
    SWITCH      shift, and go to state 8
    IF          shift, and go to state 9
    PRINT       shift, and go to state 10
    DEF         shift, and go to state 11
    ';'         shift, and go to state 12
    '{'         shift, and go to state 13

    stmt  go to state 69


state 49

   35 logic_list: logic_list '&' . logic_expr

    INTNUM       shift, and go to state 21
    FLOATNUM     shift, and go to state 22
    QUOTESTRING  shift, and go to state 23
    IDENTIFIER   shift, and go to state 24
    '('          shift, and go to state 25

    logic_expr  go to state 70
    expr        go to state 33


state 50

   36 logic_list: logic_list '|' . logic_expr

    INTNUM       shift, and go to state 21
    FLOATNUM     shift, and go to state 22
    QUOTESTRING  shift, and go to state 23
    IDENTIFIER   shift, and go to state 24
    '('          shift, and go to state 25

    logic_expr  go to state 71
    expr        go to state 33


state 51

   29 logic_expr: expr '>' . expr

    INTNUM       shift, and go to state 21
    FLOATNUM     shift, and go to state 22
    QUOTESTRING  shift, and go to state 23
    IDENTIFIER   shift, and go to state 24
    '('          shift, and go to state 25

    expr  go to state 72


state 52

   28 logic_expr: expr '<' . expr

    INTNUM       shift, and go to state 21
    FLOATNUM     shift, and go to state 22
    QUOTESTRING  shift, and go to state 23
    IDENTIFIER   shift, and go to state 24
    '('          shift, and go to state 25

    expr  go to state 73


state 53

   32 logic_expr: expr NE . expr

    INTNUM       shift, and go to state 21
    FLOATNUM     shift, and go to state 22
    QUOTESTRING  shift, and go to state 23
    IDENTIFIER   shift, and go to state 24
    '('          shift, and go to state 25

    expr  go to state 74


state 54

   33 logic_expr: expr EQ . expr

    INTNUM       shift, and go to state 21
    FLOATNUM     shift, and go to state 22
    QUOTESTRING  shift, and go to state 23
    IDENTIFIER   shift, and go to state 24
    '('          shift, and go to state 25

    expr  go to state 75


state 55

   31 logic_expr: expr LE . expr

    INTNUM       shift, and go to state 21
    FLOATNUM     shift, and go to state 22
    QUOTESTRING  shift, and go to state 23
    IDENTIFIER   shift, and go to state 24
    '('          shift, and go to state 25

    expr  go to state 76


state 56

   30 logic_expr: expr GE . expr

    INTNUM       shift, and go to state 21
    FLOATNUM     shift, and go to state 22
    QUOTESTRING  shift, and go to state 23
    IDENTIFIER   shift, and go to state 24
    '('          shift, and go to state 25

    expr  go to state 77


state 57

   14 stmt: FOR '(' stmt logic_list . ';' stmt ')' stmt
   35 logic_list: logic_list . '&' logic_expr
   36           | logic_list . '|' logic_expr

    ';'  shift, and go to state 78
    '&'  shift, and go to state 49
    '|'  shift, and go to state 50


state 58

   15 stmt: REPEAT stmt UNTIL '(' . logic_list ')' ';'

    INTNUM       shift, and go to state 21
    FLOATNUM     shift, and go to state 22
    QUOTESTRING  shift, and go to state 23
    IDENTIFIER   shift, and go to state 24
    '('          shift, and go to state 25

    logic_expr  go to state 31
    logic_list  go to state 79
    expr        go to state 33


state 59

   16 stmt: SWITCH '(' expr ')' . case_stmt

    CASE  shift, and go to state 80
    '{'   shift, and go to state 81

    case_stmt  go to state 82


state 60

   17 stmt: IF '(' logic_list ')' . stmt
   18     | IF '(' logic_list ')' . stmt ELSE stmt

    IDENTIFIER  shift, and go to state 4
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    REPEAT      shift, and go to state 7
    SWITCH      shift, and go to state 8
    IF          shift, and go to state 9
    PRINT       shift, and go to state 10
    DEF         shift, and go to state 11
    ';'         shift, and go to state 12
    '{'         shift, and go to state 13

    stmt  go to state 83


state 61

   45 expr: '(' expr ')' .

    $default  reduce using rule 45 (expr)


state 62

   41 expr: expr . '+' expr
   41     | expr '+' expr .
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr

    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 41 (expr)


state 63

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   42     | expr '-' expr .
   43     | expr . '*' expr
   44     | expr . '/' expr

    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 42 (expr)


state 64

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   43     | expr '*' expr .
   44     | expr . '/' expr

    $default  reduce using rule 43 (expr)


state 65

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   44     | expr '/' expr .

    $default  reduce using rule 44 (expr)


state 66

    4 stmt: DEF IDENTIFIER AS INT . VAR '=' expr ';'
    7     | DEF IDENTIFIER AS INT . CONST '=' expr ';'

    VAR    shift, and go to state 84
    CONST  shift, and go to state 85


state 67

    5 stmt: DEF IDENTIFIER AS FLOAT . VAR '=' expr ';'
    8     | DEF IDENTIFIER AS FLOAT . CONST '=' expr ';'

    VAR    shift, and go to state 86
    CONST  shift, and go to state 87


state 68

    6 stmt: DEF IDENTIFIER AS STRING . VAR '=' expr ';'
    9     | DEF IDENTIFIER AS STRING . CONST '=' expr ';'

    VAR    shift, and go to state 88
    CONST  shift, and go to state 89


state 69

   13 stmt: WHILE '(' logic_list ')' stmt .

    $default  reduce using rule 13 (stmt)


state 70

   35 logic_list: logic_list '&' logic_expr .

    $default  reduce using rule 35 (logic_list)


state 71

   36 logic_list: logic_list '|' logic_expr .

    $default  reduce using rule 36 (logic_list)


state 72

   29 logic_expr: expr '>' expr .
   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr

    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 29 (logic_expr)


state 73

   28 logic_expr: expr '<' expr .
   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr

    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 28 (logic_expr)


state 74

   32 logic_expr: expr NE expr .
   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr

    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 32 (logic_expr)


state 75

   33 logic_expr: expr EQ expr .
   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr

    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 33 (logic_expr)


state 76

   31 logic_expr: expr LE expr .
   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr

    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 31 (logic_expr)


state 77

   30 logic_expr: expr GE expr .
   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr

    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 30 (logic_expr)


state 78

   14 stmt: FOR '(' stmt logic_list ';' . stmt ')' stmt

    IDENTIFIER  shift, and go to state 4
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    REPEAT      shift, and go to state 7
    SWITCH      shift, and go to state 8
    IF          shift, and go to state 9
    PRINT       shift, and go to state 10
    DEF         shift, and go to state 11
    ';'         shift, and go to state 12
    '{'         shift, and go to state 13

    stmt  go to state 90


state 79

   15 stmt: REPEAT stmt UNTIL '(' logic_list . ')' ';'
   35 logic_list: logic_list . '&' logic_expr
   36           | logic_list . '|' logic_expr

    ')'  shift, and go to state 91
    '&'  shift, and go to state 49
    '|'  shift, and go to state 50


state 80

   23 case_stmt: CASE . '(' expr ')' stmt

    '('  shift, and go to state 92


state 81

   24 case_stmt: '{' . case_list '}'
   25          | '{' . case_list defult_stmt '}'

    CASE  shift, and go to state 80
    '{'   shift, and go to state 81

    case_stmt  go to state 93
    case_list  go to state 94


state 82

   16 stmt: SWITCH '(' expr ')' case_stmt .

    $default  reduce using rule 16 (stmt)


state 83

   17 stmt: IF '(' logic_list ')' stmt .
   18     | IF '(' logic_list ')' stmt . ELSE stmt

    ELSE  shift, and go to state 95

    $default  reduce using rule 17 (stmt)


state 84

    4 stmt: DEF IDENTIFIER AS INT VAR . '=' expr ';'

    '='  shift, and go to state 96


state 85

    7 stmt: DEF IDENTIFIER AS INT CONST . '=' expr ';'

    '='  shift, and go to state 97


state 86

    5 stmt: DEF IDENTIFIER AS FLOAT VAR . '=' expr ';'

    '='  shift, and go to state 98


state 87

    8 stmt: DEF IDENTIFIER AS FLOAT CONST . '=' expr ';'

    '='  shift, and go to state 99


state 88

    6 stmt: DEF IDENTIFIER AS STRING VAR . '=' expr ';'

    '='  shift, and go to state 100


state 89

    9 stmt: DEF IDENTIFIER AS STRING CONST . '=' expr ';'

    '='  shift, and go to state 101


state 90

   14 stmt: FOR '(' stmt logic_list ';' stmt . ')' stmt

    ')'  shift, and go to state 102


state 91

   15 stmt: REPEAT stmt UNTIL '(' logic_list ')' . ';'

    ';'  shift, and go to state 103


state 92

   23 case_stmt: CASE '(' . expr ')' stmt

    INTNUM       shift, and go to state 21
    FLOATNUM     shift, and go to state 22
    QUOTESTRING  shift, and go to state 23
    IDENTIFIER   shift, and go to state 24
    '('          shift, and go to state 25

    expr  go to state 104


state 93

   26 case_list: case_stmt .

    $default  reduce using rule 26 (case_list)


state 94

   24 case_stmt: '{' case_list . '}'
   25          | '{' case_list . defult_stmt '}'
   27 case_list: case_list . case_stmt

    CASE     shift, and go to state 80
    DEFAULT  shift, and go to state 105
    '{'      shift, and go to state 81
    '}'      shift, and go to state 106

    defult_stmt  go to state 107
    case_stmt    go to state 108


state 95

   18 stmt: IF '(' logic_list ')' stmt ELSE . stmt

    IDENTIFIER  shift, and go to state 4
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    REPEAT      shift, and go to state 7
    SWITCH      shift, and go to state 8
    IF          shift, and go to state 9
    PRINT       shift, and go to state 10
    DEF         shift, and go to state 11
    ';'         shift, and go to state 12
    '{'         shift, and go to state 13

    stmt  go to state 109


state 96

    4 stmt: DEF IDENTIFIER AS INT VAR '=' . expr ';'

    INTNUM       shift, and go to state 21
    FLOATNUM     shift, and go to state 22
    QUOTESTRING  shift, and go to state 23
    IDENTIFIER   shift, and go to state 24
    '('          shift, and go to state 25

    expr  go to state 110


state 97

    7 stmt: DEF IDENTIFIER AS INT CONST '=' . expr ';'

    INTNUM       shift, and go to state 21
    FLOATNUM     shift, and go to state 22
    QUOTESTRING  shift, and go to state 23
    IDENTIFIER   shift, and go to state 24
    '('          shift, and go to state 25

    expr  go to state 111


state 98

    5 stmt: DEF IDENTIFIER AS FLOAT VAR '=' . expr ';'

    INTNUM       shift, and go to state 21
    FLOATNUM     shift, and go to state 22
    QUOTESTRING  shift, and go to state 23
    IDENTIFIER   shift, and go to state 24
    '('          shift, and go to state 25

    expr  go to state 112


state 99

    8 stmt: DEF IDENTIFIER AS FLOAT CONST '=' . expr ';'

    INTNUM       shift, and go to state 21
    FLOATNUM     shift, and go to state 22
    QUOTESTRING  shift, and go to state 23
    IDENTIFIER   shift, and go to state 24
    '('          shift, and go to state 25

    expr  go to state 113


state 100

    6 stmt: DEF IDENTIFIER AS STRING VAR '=' . expr ';'

    INTNUM       shift, and go to state 21
    FLOATNUM     shift, and go to state 22
    QUOTESTRING  shift, and go to state 23
    IDENTIFIER   shift, and go to state 24
    '('          shift, and go to state 25

    expr  go to state 114


state 101

    9 stmt: DEF IDENTIFIER AS STRING CONST '=' . expr ';'

    INTNUM       shift, and go to state 21
    FLOATNUM     shift, and go to state 22
    QUOTESTRING  shift, and go to state 23
    IDENTIFIER   shift, and go to state 24
    '('          shift, and go to state 25

    expr  go to state 115


state 102

   14 stmt: FOR '(' stmt logic_list ';' stmt ')' . stmt

    IDENTIFIER  shift, and go to state 4
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    REPEAT      shift, and go to state 7
    SWITCH      shift, and go to state 8
    IF          shift, and go to state 9
    PRINT       shift, and go to state 10
    DEF         shift, and go to state 11
    ';'         shift, and go to state 12
    '{'         shift, and go to state 13

    stmt  go to state 116


state 103

   15 stmt: REPEAT stmt UNTIL '(' logic_list ')' ';' .

    $default  reduce using rule 15 (stmt)


state 104

   23 case_stmt: CASE '(' expr . ')' stmt
   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr

    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42
    ')'  shift, and go to state 117


state 105

   22 defult_stmt: DEFAULT . stmt

    IDENTIFIER  shift, and go to state 4
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    REPEAT      shift, and go to state 7
    SWITCH      shift, and go to state 8
    IF          shift, and go to state 9
    PRINT       shift, and go to state 10
    DEF         shift, and go to state 11
    ';'         shift, and go to state 12
    '{'         shift, and go to state 13

    stmt  go to state 118


state 106

   24 case_stmt: '{' case_list '}' .

    $default  reduce using rule 24 (case_stmt)


state 107

   25 case_stmt: '{' case_list defult_stmt . '}'

    '}'  shift, and go to state 119


state 108

   27 case_list: case_list case_stmt .

    $default  reduce using rule 27 (case_list)


state 109

   18 stmt: IF '(' logic_list ')' stmt ELSE stmt .

    $default  reduce using rule 18 (stmt)


state 110

    4 stmt: DEF IDENTIFIER AS INT VAR '=' expr . ';'
   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr

    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42
    ';'  shift, and go to state 120


state 111

    7 stmt: DEF IDENTIFIER AS INT CONST '=' expr . ';'
   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr

    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42
    ';'  shift, and go to state 121


state 112

    5 stmt: DEF IDENTIFIER AS FLOAT VAR '=' expr . ';'
   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr

    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42
    ';'  shift, and go to state 122


state 113

    8 stmt: DEF IDENTIFIER AS FLOAT CONST '=' expr . ';'
   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr

    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42
    ';'  shift, and go to state 123


state 114

    6 stmt: DEF IDENTIFIER AS STRING VAR '=' expr . ';'
   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr

    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42
    ';'  shift, and go to state 124


state 115

    9 stmt: DEF IDENTIFIER AS STRING CONST '=' expr . ';'
   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr

    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42
    ';'  shift, and go to state 125


state 116

   14 stmt: FOR '(' stmt logic_list ';' stmt ')' stmt .

    $default  reduce using rule 14 (stmt)


state 117

   23 case_stmt: CASE '(' expr ')' . stmt

    IDENTIFIER  shift, and go to state 4
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    REPEAT      shift, and go to state 7
    SWITCH      shift, and go to state 8
    IF          shift, and go to state 9
    PRINT       shift, and go to state 10
    DEF         shift, and go to state 11
    ';'         shift, and go to state 12
    '{'         shift, and go to state 13

    stmt  go to state 126


state 118

   22 defult_stmt: DEFAULT stmt .

    $default  reduce using rule 22 (defult_stmt)


state 119

   25 case_stmt: '{' case_list defult_stmt '}' .

    $default  reduce using rule 25 (case_stmt)


state 120

    4 stmt: DEF IDENTIFIER AS INT VAR '=' expr ';' .

    $default  reduce using rule 4 (stmt)


state 121

    7 stmt: DEF IDENTIFIER AS INT CONST '=' expr ';' .

    $default  reduce using rule 7 (stmt)


state 122

    5 stmt: DEF IDENTIFIER AS FLOAT VAR '=' expr ';' .

    $default  reduce using rule 5 (stmt)


state 123

    8 stmt: DEF IDENTIFIER AS FLOAT CONST '=' expr ';' .

    $default  reduce using rule 8 (stmt)


state 124

    6 stmt: DEF IDENTIFIER AS STRING VAR '=' expr ';' .

    $default  reduce using rule 6 (stmt)


state 125

    9 stmt: DEF IDENTIFIER AS STRING CONST '=' expr ';' .

    $default  reduce using rule 9 (stmt)


state 126

   23 case_stmt: CASE '(' expr ')' stmt .

    $default  reduce using rule 23 (case_stmt)
