Terminals unused in grammar

   FUN


Grammar

    0 $accept: program $end

    1 program: function

    2 function: function stmt
    3         | function err_stmt
    4         | /* empty */

    5 err_stmt: error ';'
    6         | error '}'
    7         | error ')'
    8         | error REPEAT

    9 stmt: DEF IDENTIFIER AS INT VAR '=' expr ';'
   10     | DEF IDENTIFIER AS FLOAT VAR '=' expr ';'
   11     | DEF IDENTIFIER AS STRING VAR '=' expr ';'
   12     | DEF IDENTIFIER AS INT VAR ';'
   13     | DEF IDENTIFIER AS FLOAT VAR ';'
   14     | DEF IDENTIFIER AS STRING VAR ';'
   15     | DEF IDENTIFIER AS INT CONST '=' expr ';'
   16     | DEF IDENTIFIER AS FLOAT CONST '=' expr ';'
   17     | DEF IDENTIFIER AS STRING CONST '=' expr ';'
   18     | ';'
   19     | PRINT expr ';'
   20     | IDENTIFIER '=' expr ';'
   21     | WHILE '(' logic_list ')' stmt
   22     | FOR '(' stmt logic_list ';' stmt ')' stmt
   23     | REPEAT stmt UNTIL '(' logic_list ')' ';'
   24     | SWITCH '(' expr ')' case_stmt
   25     | IF '(' logic_list ')' stmt
   26     | IF '(' logic_list ')' stmt ELSE stmt
   27     | '{' stmt_list '}'

   28 stmt_list: stmt
   29          | stmt_list stmt

   30 defult_stmt: DEFAULT stmt

   31 case_stmt: CASE '(' expr ')' stmt
   32          | '{' case_list '}'
   33          | '{' case_list defult_stmt '}'

   34 case_list: case_stmt
   35          | case_list case_stmt

   36 logic_expr: expr '<' expr
   37           | expr '>' expr
   38           | expr GE expr
   39           | expr LE expr
   40           | expr NE expr
   41           | expr EQ expr
   42           | '(' logic_list ')'

   43 logic_list: logic_expr
   44           | logic_list '|' logic_expr
   45           | logic_list '&' logic_expr

   46 expr: INTNUM
   47     | FLOATNUM
   48     | QUOTESTRING
   49     | IDENTIFIER
   50     | expr '+' expr
   51     | expr '-' expr
   52     | expr '*' expr
   53     | expr '/' expr
   54     | '(' expr ')'


Terminals, with rules where they appear

$end (0) 0
'&' (38) 45
'(' (40) 21 22 23 24 25 26 31 42 54
')' (41) 7 21 22 23 24 25 26 31 42 54
'*' (42) 52
'+' (43) 50
'-' (45) 51
'/' (47) 53
';' (59) 5 9 10 11 12 13 14 15 16 17 18 19 20 22 23
'<' (60) 36
'=' (61) 9 10 11 15 16 17 20
'>' (62) 37
'{' (123) 27 32 33
'|' (124) 44
'}' (125) 6 27 32 33
error (256) 5 6 7 8
INTNUM (258) 46
FLOATNUM (259) 47
QUOTESTRING (260) 48
IDENTIFIER (261) 9 10 11 12 13 14 15 16 17 20 49
WHILE (262) 21
FOR (263) 22
REPEAT (264) 8 23
UNTIL (265) 23
SWITCH (266) 24
CASE (267) 31
DEFAULT (268) 30
IF (269) 25 26
PRINT (270) 19
DEF (271) 9 10 11 12 13 14 15 16 17
AS (272) 9 10 11 12 13 14 15 16 17
VAR (273) 9 10 11 12 13 14
CONST (274) 15 16 17
INT (275) 9 12 15
FLOAT (276) 10 13 16
STRING (277) 11 14 17
FUN (278)
IFX (279)
ELSE (280) 26
NE (281) 40
EQ (282) 41
LE (283) 39
GE (284) 38


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
program (45)
    on left: 1, on right: 0
function (46)
    on left: 2 3 4, on right: 1 2 3
err_stmt (47)
    on left: 5 6 7 8, on right: 3
stmt (48)
    on left: 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27,
    on right: 2 21 22 23 25 26 28 29 30 31
stmt_list (49)
    on left: 28 29, on right: 27 29
defult_stmt (50)
    on left: 30, on right: 33
case_stmt (51)
    on left: 31 32 33, on right: 24 34 35
case_list (52)
    on left: 34 35, on right: 32 33 35
logic_expr (53)
    on left: 36 37 38 39 40 41 42, on right: 43 44 45
logic_list (54)
    on left: 43 44 45, on right: 21 22 23 25 26 42 44 45
expr (55)
    on left: 46 47 48 49 50 51 52 53 54, on right: 9 10 11 15 16 17
    19 20 24 31 36 37 38 39 40 41 50 51 52 53 54


state 0

    0 $accept: . program $end

    $default  reduce using rule 4 (function)

    program   go to state 1
    function  go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    1 program: function .
    2 function: function . stmt
    3         | function . err_stmt

    error       shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    WHILE       shift, and go to state 6
    FOR         shift, and go to state 7
    REPEAT      shift, and go to state 8
    SWITCH      shift, and go to state 9
    IF          shift, and go to state 10
    PRINT       shift, and go to state 11
    DEF         shift, and go to state 12
    ';'         shift, and go to state 13
    '{'         shift, and go to state 14

    $end  reduce using rule 1 (program)

    err_stmt  go to state 15
    stmt      go to state 16


state 3

    0 $accept: program $end .

    $default  accept


state 4

    5 err_stmt: error . ';'
    6         | error . '}'
    7         | error . ')'
    8         | error . REPEAT

    REPEAT  shift, and go to state 17
    ';'     shift, and go to state 18
    '}'     shift, and go to state 19
    ')'     shift, and go to state 20


state 5

   20 stmt: IDENTIFIER . '=' expr ';'

    '='  shift, and go to state 21


state 6

   21 stmt: WHILE . '(' logic_list ')' stmt

    '('  shift, and go to state 22


state 7

   22 stmt: FOR . '(' stmt logic_list ';' stmt ')' stmt

    '('  shift, and go to state 23


state 8

   23 stmt: REPEAT . stmt UNTIL '(' logic_list ')' ';'

    IDENTIFIER  shift, and go to state 5
    WHILE       shift, and go to state 6
    FOR         shift, and go to state 7
    REPEAT      shift, and go to state 8
    SWITCH      shift, and go to state 9
    IF          shift, and go to state 10
    PRINT       shift, and go to state 11
    DEF         shift, and go to state 12
    ';'         shift, and go to state 13
    '{'         shift, and go to state 14

    stmt  go to state 24


state 9

   24 stmt: SWITCH . '(' expr ')' case_stmt

    '('  shift, and go to state 25


state 10

   25 stmt: IF . '(' logic_list ')' stmt
   26     | IF . '(' logic_list ')' stmt ELSE stmt

    '('  shift, and go to state 26


state 11

   19 stmt: PRINT . expr ';'

    INTNUM       shift, and go to state 27
    FLOATNUM     shift, and go to state 28
    QUOTESTRING  shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    '('          shift, and go to state 31

    expr  go to state 32


state 12

    9 stmt: DEF . IDENTIFIER AS INT VAR '=' expr ';'
   10     | DEF . IDENTIFIER AS FLOAT VAR '=' expr ';'
   11     | DEF . IDENTIFIER AS STRING VAR '=' expr ';'
   12     | DEF . IDENTIFIER AS INT VAR ';'
   13     | DEF . IDENTIFIER AS FLOAT VAR ';'
   14     | DEF . IDENTIFIER AS STRING VAR ';'
   15     | DEF . IDENTIFIER AS INT CONST '=' expr ';'
   16     | DEF . IDENTIFIER AS FLOAT CONST '=' expr ';'
   17     | DEF . IDENTIFIER AS STRING CONST '=' expr ';'

    IDENTIFIER  shift, and go to state 33


state 13

   18 stmt: ';' .

    $default  reduce using rule 18 (stmt)


state 14

   27 stmt: '{' . stmt_list '}'

    IDENTIFIER  shift, and go to state 5
    WHILE       shift, and go to state 6
    FOR         shift, and go to state 7
    REPEAT      shift, and go to state 8
    SWITCH      shift, and go to state 9
    IF          shift, and go to state 10
    PRINT       shift, and go to state 11
    DEF         shift, and go to state 12
    ';'         shift, and go to state 13
    '{'         shift, and go to state 14

    stmt       go to state 34
    stmt_list  go to state 35


state 15

    3 function: function err_stmt .

    $default  reduce using rule 3 (function)


state 16

    2 function: function stmt .

    $default  reduce using rule 2 (function)


state 17

    8 err_stmt: error REPEAT .

    $default  reduce using rule 8 (err_stmt)


state 18

    5 err_stmt: error ';' .

    $default  reduce using rule 5 (err_stmt)


state 19

    6 err_stmt: error '}' .

    $default  reduce using rule 6 (err_stmt)


state 20

    7 err_stmt: error ')' .

    $default  reduce using rule 7 (err_stmt)


state 21

   20 stmt: IDENTIFIER '=' . expr ';'

    INTNUM       shift, and go to state 27
    FLOATNUM     shift, and go to state 28
    QUOTESTRING  shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    '('          shift, and go to state 31

    expr  go to state 36


state 22

   21 stmt: WHILE '(' . logic_list ')' stmt

    INTNUM       shift, and go to state 27
    FLOATNUM     shift, and go to state 28
    QUOTESTRING  shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    '('          shift, and go to state 37

    logic_expr  go to state 38
    logic_list  go to state 39
    expr        go to state 40


state 23

   22 stmt: FOR '(' . stmt logic_list ';' stmt ')' stmt

    IDENTIFIER  shift, and go to state 5
    WHILE       shift, and go to state 6
    FOR         shift, and go to state 7
    REPEAT      shift, and go to state 8
    SWITCH      shift, and go to state 9
    IF          shift, and go to state 10
    PRINT       shift, and go to state 11
    DEF         shift, and go to state 12
    ';'         shift, and go to state 13
    '{'         shift, and go to state 14

    stmt  go to state 41


state 24

   23 stmt: REPEAT stmt . UNTIL '(' logic_list ')' ';'

    UNTIL  shift, and go to state 42


state 25

   24 stmt: SWITCH '(' . expr ')' case_stmt

    INTNUM       shift, and go to state 27
    FLOATNUM     shift, and go to state 28
    QUOTESTRING  shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    '('          shift, and go to state 31

    expr  go to state 43


state 26

   25 stmt: IF '(' . logic_list ')' stmt
   26     | IF '(' . logic_list ')' stmt ELSE stmt

    INTNUM       shift, and go to state 27
    FLOATNUM     shift, and go to state 28
    QUOTESTRING  shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    '('          shift, and go to state 37

    logic_expr  go to state 38
    logic_list  go to state 44
    expr        go to state 40


state 27

   46 expr: INTNUM .

    $default  reduce using rule 46 (expr)


state 28

   47 expr: FLOATNUM .

    $default  reduce using rule 47 (expr)


state 29

   48 expr: QUOTESTRING .

    $default  reduce using rule 48 (expr)


state 30

   49 expr: IDENTIFIER .

    $default  reduce using rule 49 (expr)


state 31

   54 expr: '(' . expr ')'

    INTNUM       shift, and go to state 27
    FLOATNUM     shift, and go to state 28
    QUOTESTRING  shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    '('          shift, and go to state 31

    expr  go to state 45


state 32

   19 stmt: PRINT expr . ';'
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    ';'  shift, and go to state 50


state 33

    9 stmt: DEF IDENTIFIER . AS INT VAR '=' expr ';'
   10     | DEF IDENTIFIER . AS FLOAT VAR '=' expr ';'
   11     | DEF IDENTIFIER . AS STRING VAR '=' expr ';'
   12     | DEF IDENTIFIER . AS INT VAR ';'
   13     | DEF IDENTIFIER . AS FLOAT VAR ';'
   14     | DEF IDENTIFIER . AS STRING VAR ';'
   15     | DEF IDENTIFIER . AS INT CONST '=' expr ';'
   16     | DEF IDENTIFIER . AS FLOAT CONST '=' expr ';'
   17     | DEF IDENTIFIER . AS STRING CONST '=' expr ';'

    AS  shift, and go to state 51


state 34

   28 stmt_list: stmt .

    $default  reduce using rule 28 (stmt_list)


state 35

   27 stmt: '{' stmt_list . '}'
   29 stmt_list: stmt_list . stmt

    IDENTIFIER  shift, and go to state 5
    WHILE       shift, and go to state 6
    FOR         shift, and go to state 7
    REPEAT      shift, and go to state 8
    SWITCH      shift, and go to state 9
    IF          shift, and go to state 10
    PRINT       shift, and go to state 11
    DEF         shift, and go to state 12
    ';'         shift, and go to state 13
    '}'         shift, and go to state 52
    '{'         shift, and go to state 14

    stmt  go to state 53


state 36

   20 stmt: IDENTIFIER '=' expr . ';'
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    ';'  shift, and go to state 54


state 37

   42 logic_expr: '(' . logic_list ')'
   54 expr: '(' . expr ')'

    INTNUM       shift, and go to state 27
    FLOATNUM     shift, and go to state 28
    QUOTESTRING  shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    '('          shift, and go to state 37

    logic_expr  go to state 38
    logic_list  go to state 55
    expr        go to state 56


state 38

   43 logic_list: logic_expr .

    $default  reduce using rule 43 (logic_list)


state 39

   21 stmt: WHILE '(' logic_list . ')' stmt
   44 logic_list: logic_list . '|' logic_expr
   45           | logic_list . '&' logic_expr

    '&'  shift, and go to state 57
    '|'  shift, and go to state 58
    ')'  shift, and go to state 59


state 40

   36 logic_expr: expr . '<' expr
   37           | expr . '>' expr
   38           | expr . GE expr
   39           | expr . LE expr
   40           | expr . NE expr
   41           | expr . EQ expr
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr

    '>'  shift, and go to state 60
    '<'  shift, and go to state 61
    NE   shift, and go to state 62
    EQ   shift, and go to state 63
    LE   shift, and go to state 64
    GE   shift, and go to state 65
    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49


state 41

   22 stmt: FOR '(' stmt . logic_list ';' stmt ')' stmt

    INTNUM       shift, and go to state 27
    FLOATNUM     shift, and go to state 28
    QUOTESTRING  shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    '('          shift, and go to state 37

    logic_expr  go to state 38
    logic_list  go to state 66
    expr        go to state 40


state 42

   23 stmt: REPEAT stmt UNTIL . '(' logic_list ')' ';'

    '('  shift, and go to state 67


state 43

   24 stmt: SWITCH '(' expr . ')' case_stmt
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    ')'  shift, and go to state 68


state 44

   25 stmt: IF '(' logic_list . ')' stmt
   26     | IF '(' logic_list . ')' stmt ELSE stmt
   44 logic_list: logic_list . '|' logic_expr
   45           | logic_list . '&' logic_expr

    '&'  shift, and go to state 57
    '|'  shift, and go to state 58
    ')'  shift, and go to state 69


state 45

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | '(' expr . ')'

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    ')'  shift, and go to state 70


state 46

   50 expr: expr '+' . expr

    INTNUM       shift, and go to state 27
    FLOATNUM     shift, and go to state 28
    QUOTESTRING  shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    '('          shift, and go to state 31

    expr  go to state 71


state 47

   51 expr: expr '-' . expr

    INTNUM       shift, and go to state 27
    FLOATNUM     shift, and go to state 28
    QUOTESTRING  shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    '('          shift, and go to state 31

    expr  go to state 72


state 48

   52 expr: expr '*' . expr

    INTNUM       shift, and go to state 27
    FLOATNUM     shift, and go to state 28
    QUOTESTRING  shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    '('          shift, and go to state 31

    expr  go to state 73


state 49

   53 expr: expr '/' . expr

    INTNUM       shift, and go to state 27
    FLOATNUM     shift, and go to state 28
    QUOTESTRING  shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    '('          shift, and go to state 31

    expr  go to state 74


state 50

   19 stmt: PRINT expr ';' .

    $default  reduce using rule 19 (stmt)


state 51

    9 stmt: DEF IDENTIFIER AS . INT VAR '=' expr ';'
   10     | DEF IDENTIFIER AS . FLOAT VAR '=' expr ';'
   11     | DEF IDENTIFIER AS . STRING VAR '=' expr ';'
   12     | DEF IDENTIFIER AS . INT VAR ';'
   13     | DEF IDENTIFIER AS . FLOAT VAR ';'
   14     | DEF IDENTIFIER AS . STRING VAR ';'
   15     | DEF IDENTIFIER AS . INT CONST '=' expr ';'
   16     | DEF IDENTIFIER AS . FLOAT CONST '=' expr ';'
   17     | DEF IDENTIFIER AS . STRING CONST '=' expr ';'

    INT     shift, and go to state 75
    FLOAT   shift, and go to state 76
    STRING  shift, and go to state 77


state 52

   27 stmt: '{' stmt_list '}' .

    $default  reduce using rule 27 (stmt)


state 53

   29 stmt_list: stmt_list stmt .

    $default  reduce using rule 29 (stmt_list)


state 54

   20 stmt: IDENTIFIER '=' expr ';' .

    $default  reduce using rule 20 (stmt)


state 55

   42 logic_expr: '(' logic_list . ')'
   44 logic_list: logic_list . '|' logic_expr
   45           | logic_list . '&' logic_expr

    '&'  shift, and go to state 57
    '|'  shift, and go to state 58
    ')'  shift, and go to state 78


state 56

   36 logic_expr: expr . '<' expr
   37           | expr . '>' expr
   38           | expr . GE expr
   39           | expr . LE expr
   40           | expr . NE expr
   41           | expr . EQ expr
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | '(' expr . ')'

    '>'  shift, and go to state 60
    '<'  shift, and go to state 61
    NE   shift, and go to state 62
    EQ   shift, and go to state 63
    LE   shift, and go to state 64
    GE   shift, and go to state 65
    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    ')'  shift, and go to state 70


state 57

   45 logic_list: logic_list '&' . logic_expr

    INTNUM       shift, and go to state 27
    FLOATNUM     shift, and go to state 28
    QUOTESTRING  shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    '('          shift, and go to state 37

    logic_expr  go to state 79
    expr        go to state 40


state 58

   44 logic_list: logic_list '|' . logic_expr

    INTNUM       shift, and go to state 27
    FLOATNUM     shift, and go to state 28
    QUOTESTRING  shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    '('          shift, and go to state 37

    logic_expr  go to state 80
    expr        go to state 40


state 59

   21 stmt: WHILE '(' logic_list ')' . stmt

    IDENTIFIER  shift, and go to state 5
    WHILE       shift, and go to state 6
    FOR         shift, and go to state 7
    REPEAT      shift, and go to state 8
    SWITCH      shift, and go to state 9
    IF          shift, and go to state 10
    PRINT       shift, and go to state 11
    DEF         shift, and go to state 12
    ';'         shift, and go to state 13
    '{'         shift, and go to state 14

    stmt  go to state 81


state 60

   37 logic_expr: expr '>' . expr

    INTNUM       shift, and go to state 27
    FLOATNUM     shift, and go to state 28
    QUOTESTRING  shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    '('          shift, and go to state 31

    expr  go to state 82


state 61

   36 logic_expr: expr '<' . expr

    INTNUM       shift, and go to state 27
    FLOATNUM     shift, and go to state 28
    QUOTESTRING  shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    '('          shift, and go to state 31

    expr  go to state 83


state 62

   40 logic_expr: expr NE . expr

    INTNUM       shift, and go to state 27
    FLOATNUM     shift, and go to state 28
    QUOTESTRING  shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    '('          shift, and go to state 31

    expr  go to state 84


state 63

   41 logic_expr: expr EQ . expr

    INTNUM       shift, and go to state 27
    FLOATNUM     shift, and go to state 28
    QUOTESTRING  shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    '('          shift, and go to state 31

    expr  go to state 85


state 64

   39 logic_expr: expr LE . expr

    INTNUM       shift, and go to state 27
    FLOATNUM     shift, and go to state 28
    QUOTESTRING  shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    '('          shift, and go to state 31

    expr  go to state 86


state 65

   38 logic_expr: expr GE . expr

    INTNUM       shift, and go to state 27
    FLOATNUM     shift, and go to state 28
    QUOTESTRING  shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    '('          shift, and go to state 31

    expr  go to state 87


state 66

   22 stmt: FOR '(' stmt logic_list . ';' stmt ')' stmt
   44 logic_list: logic_list . '|' logic_expr
   45           | logic_list . '&' logic_expr

    '&'  shift, and go to state 57
    '|'  shift, and go to state 58
    ';'  shift, and go to state 88


state 67

   23 stmt: REPEAT stmt UNTIL '(' . logic_list ')' ';'

    INTNUM       shift, and go to state 27
    FLOATNUM     shift, and go to state 28
    QUOTESTRING  shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    '('          shift, and go to state 37

    logic_expr  go to state 38
    logic_list  go to state 89
    expr        go to state 40


state 68

   24 stmt: SWITCH '(' expr ')' . case_stmt

    CASE  shift, and go to state 90
    '{'   shift, and go to state 91

    case_stmt  go to state 92


state 69

   25 stmt: IF '(' logic_list ')' . stmt
   26     | IF '(' logic_list ')' . stmt ELSE stmt

    IDENTIFIER  shift, and go to state 5
    WHILE       shift, and go to state 6
    FOR         shift, and go to state 7
    REPEAT      shift, and go to state 8
    SWITCH      shift, and go to state 9
    IF          shift, and go to state 10
    PRINT       shift, and go to state 11
    DEF         shift, and go to state 12
    ';'         shift, and go to state 13
    '{'         shift, and go to state 14

    stmt  go to state 93


state 70

   54 expr: '(' expr ')' .

    $default  reduce using rule 54 (expr)


state 71

   50 expr: expr . '+' expr
   50     | expr '+' expr .
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr

    '*'  shift, and go to state 48
    '/'  shift, and go to state 49

    $default  reduce using rule 50 (expr)


state 72

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   51     | expr '-' expr .
   52     | expr . '*' expr
   53     | expr . '/' expr

    '*'  shift, and go to state 48
    '/'  shift, and go to state 49

    $default  reduce using rule 51 (expr)


state 73

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   52     | expr '*' expr .
   53     | expr . '/' expr

    $default  reduce using rule 52 (expr)


state 74

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   53     | expr '/' expr .

    $default  reduce using rule 53 (expr)


state 75

    9 stmt: DEF IDENTIFIER AS INT . VAR '=' expr ';'
   12     | DEF IDENTIFIER AS INT . VAR ';'
   15     | DEF IDENTIFIER AS INT . CONST '=' expr ';'

    VAR    shift, and go to state 94
    CONST  shift, and go to state 95


state 76

   10 stmt: DEF IDENTIFIER AS FLOAT . VAR '=' expr ';'
   13     | DEF IDENTIFIER AS FLOAT . VAR ';'
   16     | DEF IDENTIFIER AS FLOAT . CONST '=' expr ';'

    VAR    shift, and go to state 96
    CONST  shift, and go to state 97


state 77

   11 stmt: DEF IDENTIFIER AS STRING . VAR '=' expr ';'
   14     | DEF IDENTIFIER AS STRING . VAR ';'
   17     | DEF IDENTIFIER AS STRING . CONST '=' expr ';'

    VAR    shift, and go to state 98
    CONST  shift, and go to state 99


state 78

   42 logic_expr: '(' logic_list ')' .

    $default  reduce using rule 42 (logic_expr)


state 79

   45 logic_list: logic_list '&' logic_expr .

    $default  reduce using rule 45 (logic_list)


state 80

   44 logic_list: logic_list '|' logic_expr .

    $default  reduce using rule 44 (logic_list)


state 81

   21 stmt: WHILE '(' logic_list ')' stmt .

    $default  reduce using rule 21 (stmt)


state 82

   37 logic_expr: expr '>' expr .
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49

    $default  reduce using rule 37 (logic_expr)


state 83

   36 logic_expr: expr '<' expr .
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49

    $default  reduce using rule 36 (logic_expr)


state 84

   40 logic_expr: expr NE expr .
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49

    $default  reduce using rule 40 (logic_expr)


state 85

   41 logic_expr: expr EQ expr .
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49

    $default  reduce using rule 41 (logic_expr)


state 86

   39 logic_expr: expr LE expr .
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49

    $default  reduce using rule 39 (logic_expr)


state 87

   38 logic_expr: expr GE expr .
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49

    $default  reduce using rule 38 (logic_expr)


state 88

   22 stmt: FOR '(' stmt logic_list ';' . stmt ')' stmt

    IDENTIFIER  shift, and go to state 5
    WHILE       shift, and go to state 6
    FOR         shift, and go to state 7
    REPEAT      shift, and go to state 8
    SWITCH      shift, and go to state 9
    IF          shift, and go to state 10
    PRINT       shift, and go to state 11
    DEF         shift, and go to state 12
    ';'         shift, and go to state 13
    '{'         shift, and go to state 14

    stmt  go to state 100


state 89

   23 stmt: REPEAT stmt UNTIL '(' logic_list . ')' ';'
   44 logic_list: logic_list . '|' logic_expr
   45           | logic_list . '&' logic_expr

    '&'  shift, and go to state 57
    '|'  shift, and go to state 58
    ')'  shift, and go to state 101


state 90

   31 case_stmt: CASE . '(' expr ')' stmt

    '('  shift, and go to state 102


state 91

   32 case_stmt: '{' . case_list '}'
   33          | '{' . case_list defult_stmt '}'

    CASE  shift, and go to state 90
    '{'   shift, and go to state 91

    case_stmt  go to state 103
    case_list  go to state 104


state 92

   24 stmt: SWITCH '(' expr ')' case_stmt .

    $default  reduce using rule 24 (stmt)


state 93

   25 stmt: IF '(' logic_list ')' stmt .
   26     | IF '(' logic_list ')' stmt . ELSE stmt

    ELSE  shift, and go to state 105

    $default  reduce using rule 25 (stmt)


state 94

    9 stmt: DEF IDENTIFIER AS INT VAR . '=' expr ';'
   12     | DEF IDENTIFIER AS INT VAR . ';'

    ';'  shift, and go to state 106
    '='  shift, and go to state 107


state 95

   15 stmt: DEF IDENTIFIER AS INT CONST . '=' expr ';'

    '='  shift, and go to state 108


state 96

   10 stmt: DEF IDENTIFIER AS FLOAT VAR . '=' expr ';'
   13     | DEF IDENTIFIER AS FLOAT VAR . ';'

    ';'  shift, and go to state 109
    '='  shift, and go to state 110


state 97

   16 stmt: DEF IDENTIFIER AS FLOAT CONST . '=' expr ';'

    '='  shift, and go to state 111


state 98

   11 stmt: DEF IDENTIFIER AS STRING VAR . '=' expr ';'
   14     | DEF IDENTIFIER AS STRING VAR . ';'

    ';'  shift, and go to state 112
    '='  shift, and go to state 113


state 99

   17 stmt: DEF IDENTIFIER AS STRING CONST . '=' expr ';'

    '='  shift, and go to state 114


state 100

   22 stmt: FOR '(' stmt logic_list ';' stmt . ')' stmt

    ')'  shift, and go to state 115


state 101

   23 stmt: REPEAT stmt UNTIL '(' logic_list ')' . ';'

    ';'  shift, and go to state 116


state 102

   31 case_stmt: CASE '(' . expr ')' stmt

    INTNUM       shift, and go to state 27
    FLOATNUM     shift, and go to state 28
    QUOTESTRING  shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    '('          shift, and go to state 31

    expr  go to state 117


state 103

   34 case_list: case_stmt .

    $default  reduce using rule 34 (case_list)


state 104

   32 case_stmt: '{' case_list . '}'
   33          | '{' case_list . defult_stmt '}'
   35 case_list: case_list . case_stmt

    CASE     shift, and go to state 90
    DEFAULT  shift, and go to state 118
    '}'      shift, and go to state 119
    '{'      shift, and go to state 91

    defult_stmt  go to state 120
    case_stmt    go to state 121


state 105

   26 stmt: IF '(' logic_list ')' stmt ELSE . stmt

    IDENTIFIER  shift, and go to state 5
    WHILE       shift, and go to state 6
    FOR         shift, and go to state 7
    REPEAT      shift, and go to state 8
    SWITCH      shift, and go to state 9
    IF          shift, and go to state 10
    PRINT       shift, and go to state 11
    DEF         shift, and go to state 12
    ';'         shift, and go to state 13
    '{'         shift, and go to state 14

    stmt  go to state 122


state 106

   12 stmt: DEF IDENTIFIER AS INT VAR ';' .

    $default  reduce using rule 12 (stmt)


state 107

    9 stmt: DEF IDENTIFIER AS INT VAR '=' . expr ';'

    INTNUM       shift, and go to state 27
    FLOATNUM     shift, and go to state 28
    QUOTESTRING  shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    '('          shift, and go to state 31

    expr  go to state 123


state 108

   15 stmt: DEF IDENTIFIER AS INT CONST '=' . expr ';'

    INTNUM       shift, and go to state 27
    FLOATNUM     shift, and go to state 28
    QUOTESTRING  shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    '('          shift, and go to state 31

    expr  go to state 124


state 109

   13 stmt: DEF IDENTIFIER AS FLOAT VAR ';' .

    $default  reduce using rule 13 (stmt)


state 110

   10 stmt: DEF IDENTIFIER AS FLOAT VAR '=' . expr ';'

    INTNUM       shift, and go to state 27
    FLOATNUM     shift, and go to state 28
    QUOTESTRING  shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    '('          shift, and go to state 31

    expr  go to state 125


state 111

   16 stmt: DEF IDENTIFIER AS FLOAT CONST '=' . expr ';'

    INTNUM       shift, and go to state 27
    FLOATNUM     shift, and go to state 28
    QUOTESTRING  shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    '('          shift, and go to state 31

    expr  go to state 126


state 112

   14 stmt: DEF IDENTIFIER AS STRING VAR ';' .

    $default  reduce using rule 14 (stmt)


state 113

   11 stmt: DEF IDENTIFIER AS STRING VAR '=' . expr ';'

    INTNUM       shift, and go to state 27
    FLOATNUM     shift, and go to state 28
    QUOTESTRING  shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    '('          shift, and go to state 31

    expr  go to state 127


state 114

   17 stmt: DEF IDENTIFIER AS STRING CONST '=' . expr ';'

    INTNUM       shift, and go to state 27
    FLOATNUM     shift, and go to state 28
    QUOTESTRING  shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    '('          shift, and go to state 31

    expr  go to state 128


state 115

   22 stmt: FOR '(' stmt logic_list ';' stmt ')' . stmt

    IDENTIFIER  shift, and go to state 5
    WHILE       shift, and go to state 6
    FOR         shift, and go to state 7
    REPEAT      shift, and go to state 8
    SWITCH      shift, and go to state 9
    IF          shift, and go to state 10
    PRINT       shift, and go to state 11
    DEF         shift, and go to state 12
    ';'         shift, and go to state 13
    '{'         shift, and go to state 14

    stmt  go to state 129


state 116

   23 stmt: REPEAT stmt UNTIL '(' logic_list ')' ';' .

    $default  reduce using rule 23 (stmt)


state 117

   31 case_stmt: CASE '(' expr . ')' stmt
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    ')'  shift, and go to state 130


state 118

   30 defult_stmt: DEFAULT . stmt

    IDENTIFIER  shift, and go to state 5
    WHILE       shift, and go to state 6
    FOR         shift, and go to state 7
    REPEAT      shift, and go to state 8
    SWITCH      shift, and go to state 9
    IF          shift, and go to state 10
    PRINT       shift, and go to state 11
    DEF         shift, and go to state 12
    ';'         shift, and go to state 13
    '{'         shift, and go to state 14

    stmt  go to state 131


state 119

   32 case_stmt: '{' case_list '}' .

    $default  reduce using rule 32 (case_stmt)


state 120

   33 case_stmt: '{' case_list defult_stmt . '}'

    '}'  shift, and go to state 132


state 121

   35 case_list: case_list case_stmt .

    $default  reduce using rule 35 (case_list)


state 122

   26 stmt: IF '(' logic_list ')' stmt ELSE stmt .

    $default  reduce using rule 26 (stmt)


state 123

    9 stmt: DEF IDENTIFIER AS INT VAR '=' expr . ';'
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    ';'  shift, and go to state 133


state 124

   15 stmt: DEF IDENTIFIER AS INT CONST '=' expr . ';'
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    ';'  shift, and go to state 134


state 125

   10 stmt: DEF IDENTIFIER AS FLOAT VAR '=' expr . ';'
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    ';'  shift, and go to state 135


state 126

   16 stmt: DEF IDENTIFIER AS FLOAT CONST '=' expr . ';'
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    ';'  shift, and go to state 136


state 127

   11 stmt: DEF IDENTIFIER AS STRING VAR '=' expr . ';'
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    ';'  shift, and go to state 137


state 128

   17 stmt: DEF IDENTIFIER AS STRING CONST '=' expr . ';'
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    ';'  shift, and go to state 138


state 129

   22 stmt: FOR '(' stmt logic_list ';' stmt ')' stmt .

    $default  reduce using rule 22 (stmt)


state 130

   31 case_stmt: CASE '(' expr ')' . stmt

    IDENTIFIER  shift, and go to state 5
    WHILE       shift, and go to state 6
    FOR         shift, and go to state 7
    REPEAT      shift, and go to state 8
    SWITCH      shift, and go to state 9
    IF          shift, and go to state 10
    PRINT       shift, and go to state 11
    DEF         shift, and go to state 12
    ';'         shift, and go to state 13
    '{'         shift, and go to state 14

    stmt  go to state 139


state 131

   30 defult_stmt: DEFAULT stmt .

    $default  reduce using rule 30 (defult_stmt)


state 132

   33 case_stmt: '{' case_list defult_stmt '}' .

    $default  reduce using rule 33 (case_stmt)


state 133

    9 stmt: DEF IDENTIFIER AS INT VAR '=' expr ';' .

    $default  reduce using rule 9 (stmt)


state 134

   15 stmt: DEF IDENTIFIER AS INT CONST '=' expr ';' .

    $default  reduce using rule 15 (stmt)


state 135

   10 stmt: DEF IDENTIFIER AS FLOAT VAR '=' expr ';' .

    $default  reduce using rule 10 (stmt)


state 136

   16 stmt: DEF IDENTIFIER AS FLOAT CONST '=' expr ';' .

    $default  reduce using rule 16 (stmt)


state 137

   11 stmt: DEF IDENTIFIER AS STRING VAR '=' expr ';' .

    $default  reduce using rule 11 (stmt)


state 138

   17 stmt: DEF IDENTIFIER AS STRING CONST '=' expr ';' .

    $default  reduce using rule 17 (stmt)


state 139

   31 case_stmt: CASE '(' expr ')' stmt .

    $default  reduce using rule 31 (case_stmt)
