Terminals unused in grammar

   BODY


Grammar

    0 $accept: program $end

    1 program: function

    2 function: DEF IDENTIFIER AS FUN '{' fun_body '}'

    3 fun_body: fun_body stmt
    4         | fun_body err_stmt
    5         | /* empty */

    6 err_stmt: error ';'
    7         | error '}'
    8         | error ')'
    9         | error REPEAT

   10 stmt: DEF IDENTIFIER AS INT VAR '=' expr ';'
   11     | DEF IDENTIFIER AS FLOAT VAR '=' expr ';'
   12     | DEF IDENTIFIER AS STRING VAR '=' expr ';'
   13     | DEF IDENTIFIER AS INT VAR ';'
   14     | DEF IDENTIFIER AS FLOAT VAR ';'
   15     | DEF IDENTIFIER AS STRING VAR ';'
   16     | DEF IDENTIFIER AS INT CONST '=' expr ';'
   17     | DEF IDENTIFIER AS FLOAT CONST '=' expr ';'
   18     | DEF IDENTIFIER AS STRING CONST '=' expr ';'
   19     | ';'
   20     | PRINT expr ';'
   21     | IDENTIFIER '=' expr ';'
   22     | WHILE '(' logic_list ')' stmt
   23     | FOR '(' stmt logic_list ';' stmt ')' stmt
   24     | REPEAT stmt UNTIL '(' logic_list ')' ';'
   25     | SWITCH '(' expr ')' case_stmt
   26     | IF '(' logic_list ')' stmt
   27     | IF '(' logic_list ')' stmt ELSE stmt
   28     | '{' stmt_list '}'

   29 stmt_list: stmt
   30          | stmt_list stmt

   31 defult_stmt: DEFAULT stmt

   32 case_stmt: CASE '(' expr ')' stmt
   33          | '{' case_list '}'
   34          | '{' case_list defult_stmt '}'

   35 case_list: case_stmt
   36          | case_list case_stmt

   37 logic_expr: expr '<' expr
   38           | expr '>' expr
   39           | expr GE expr
   40           | expr LE expr
   41           | expr NE expr
   42           | expr EQ expr
   43           | '(' logic_list ')'

   44 logic_list: logic_expr
   45           | logic_list '|' logic_expr
   46           | logic_list '&' logic_expr

   47 expr: INTNUM
   48     | FLOATNUM
   49     | QUOTESTRING
   50     | IDENTIFIER
   51     | expr '+' expr
   52     | expr '-' expr
   53     | expr '*' expr
   54     | expr '/' expr
   55     | '(' expr ')'


Terminals, with rules where they appear

$end (0) 0
'&' (38) 46
'(' (40) 22 23 24 25 26 27 32 43 55
')' (41) 8 22 23 24 25 26 27 32 43 55
'*' (42) 53
'+' (43) 51
'-' (45) 52
'/' (47) 54
';' (59) 6 10 11 12 13 14 15 16 17 18 19 20 21 23 24
'<' (60) 37
'=' (61) 10 11 12 16 17 18 21
'>' (62) 38
'{' (123) 2 28 33 34
'|' (124) 45
'}' (125) 2 7 28 33 34
error (256) 6 7 8 9
INTNUM (258) 47
FLOATNUM (259) 48
QUOTESTRING (260) 49
IDENTIFIER (261) 2 10 11 12 13 14 15 16 17 18 21 50
WHILE (262) 22
FOR (263) 23
REPEAT (264) 9 24
UNTIL (265) 24
SWITCH (266) 25
CASE (267) 32
DEFAULT (268) 31
IF (269) 26 27
PRINT (270) 20
DEF (271) 2 10 11 12 13 14 15 16 17 18
AS (272) 2 10 11 12 13 14 15 16 17 18
VAR (273) 10 11 12 13 14 15
CONST (274) 16 17 18
INT (275) 10 13 16
FLOAT (276) 11 14 17
STRING (277) 12 15 18
FUN (278) 2
BODY (279)
IFX (280)
ELSE (281) 27
NE (282) 41
EQ (283) 42
LE (284) 40
GE (285) 39


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
program (46)
    on left: 1, on right: 0
function (47)
    on left: 2, on right: 1
fun_body (48)
    on left: 3 4 5, on right: 2 3 4
err_stmt (49)
    on left: 6 7 8 9, on right: 4
stmt (50)
    on left: 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
    28, on right: 3 22 23 24 26 27 29 30 31 32
stmt_list (51)
    on left: 29 30, on right: 28 30
defult_stmt (52)
    on left: 31, on right: 34
case_stmt (53)
    on left: 32 33 34, on right: 25 35 36
case_list (54)
    on left: 35 36, on right: 33 34 36
logic_expr (55)
    on left: 37 38 39 40 41 42 43, on right: 44 45 46
logic_list (56)
    on left: 44 45 46, on right: 22 23 24 26 27 43 45 46
expr (57)
    on left: 47 48 49 50 51 52 53 54 55, on right: 10 11 12 16 17 18
    20 21 25 32 37 38 39 40 41 42 51 52 53 54 55


state 0

    0 $accept: . program $end

    DEF  shift, and go to state 1

    program   go to state 2
    function  go to state 3


state 1

    2 function: DEF . IDENTIFIER AS FUN '{' fun_body '}'

    IDENTIFIER  shift, and go to state 4


state 2

    0 $accept: program . $end

    $end  shift, and go to state 5


state 3

    1 program: function .

    $default  reduce using rule 1 (program)


state 4

    2 function: DEF IDENTIFIER . AS FUN '{' fun_body '}'

    AS  shift, and go to state 6


state 5

    0 $accept: program $end .

    $default  accept


state 6

    2 function: DEF IDENTIFIER AS . FUN '{' fun_body '}'

    FUN  shift, and go to state 7


state 7

    2 function: DEF IDENTIFIER AS FUN . '{' fun_body '}'

    '{'  shift, and go to state 8


state 8

    2 function: DEF IDENTIFIER AS FUN '{' . fun_body '}'

    $default  reduce using rule 5 (fun_body)

    fun_body  go to state 9


state 9

    2 function: DEF IDENTIFIER AS FUN '{' fun_body . '}'
    3 fun_body: fun_body . stmt
    4         | fun_body . err_stmt

    error       shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    WHILE       shift, and go to state 12
    FOR         shift, and go to state 13
    REPEAT      shift, and go to state 14
    SWITCH      shift, and go to state 15
    IF          shift, and go to state 16
    PRINT       shift, and go to state 17
    DEF         shift, and go to state 18
    '{'         shift, and go to state 19
    '}'         shift, and go to state 20
    ';'         shift, and go to state 21

    err_stmt  go to state 22
    stmt      go to state 23


state 10

    6 err_stmt: error . ';'
    7         | error . '}'
    8         | error . ')'
    9         | error . REPEAT

    REPEAT  shift, and go to state 24
    '}'     shift, and go to state 25
    ';'     shift, and go to state 26
    ')'     shift, and go to state 27


state 11

   21 stmt: IDENTIFIER . '=' expr ';'

    '='  shift, and go to state 28


state 12

   22 stmt: WHILE . '(' logic_list ')' stmt

    '('  shift, and go to state 29


state 13

   23 stmt: FOR . '(' stmt logic_list ';' stmt ')' stmt

    '('  shift, and go to state 30


state 14

   24 stmt: REPEAT . stmt UNTIL '(' logic_list ')' ';'

    IDENTIFIER  shift, and go to state 11
    WHILE       shift, and go to state 12
    FOR         shift, and go to state 13
    REPEAT      shift, and go to state 14
    SWITCH      shift, and go to state 15
    IF          shift, and go to state 16
    PRINT       shift, and go to state 17
    DEF         shift, and go to state 18
    '{'         shift, and go to state 19
    ';'         shift, and go to state 21

    stmt  go to state 31


state 15

   25 stmt: SWITCH . '(' expr ')' case_stmt

    '('  shift, and go to state 32


state 16

   26 stmt: IF . '(' logic_list ')' stmt
   27     | IF . '(' logic_list ')' stmt ELSE stmt

    '('  shift, and go to state 33


state 17

   20 stmt: PRINT . expr ';'

    INTNUM       shift, and go to state 34
    FLOATNUM     shift, and go to state 35
    QUOTESTRING  shift, and go to state 36
    IDENTIFIER   shift, and go to state 37
    '('          shift, and go to state 38

    expr  go to state 39


state 18

   10 stmt: DEF . IDENTIFIER AS INT VAR '=' expr ';'
   11     | DEF . IDENTIFIER AS FLOAT VAR '=' expr ';'
   12     | DEF . IDENTIFIER AS STRING VAR '=' expr ';'
   13     | DEF . IDENTIFIER AS INT VAR ';'
   14     | DEF . IDENTIFIER AS FLOAT VAR ';'
   15     | DEF . IDENTIFIER AS STRING VAR ';'
   16     | DEF . IDENTIFIER AS INT CONST '=' expr ';'
   17     | DEF . IDENTIFIER AS FLOAT CONST '=' expr ';'
   18     | DEF . IDENTIFIER AS STRING CONST '=' expr ';'

    IDENTIFIER  shift, and go to state 40


state 19

   28 stmt: '{' . stmt_list '}'

    IDENTIFIER  shift, and go to state 11
    WHILE       shift, and go to state 12
    FOR         shift, and go to state 13
    REPEAT      shift, and go to state 14
    SWITCH      shift, and go to state 15
    IF          shift, and go to state 16
    PRINT       shift, and go to state 17
    DEF         shift, and go to state 18
    '{'         shift, and go to state 19
    ';'         shift, and go to state 21

    stmt       go to state 41
    stmt_list  go to state 42


state 20

    2 function: DEF IDENTIFIER AS FUN '{' fun_body '}' .

    $default  reduce using rule 2 (function)


state 21

   19 stmt: ';' .

    $default  reduce using rule 19 (stmt)


state 22

    4 fun_body: fun_body err_stmt .

    $default  reduce using rule 4 (fun_body)


state 23

    3 fun_body: fun_body stmt .

    $default  reduce using rule 3 (fun_body)


state 24

    9 err_stmt: error REPEAT .

    $default  reduce using rule 9 (err_stmt)


state 25

    7 err_stmt: error '}' .

    $default  reduce using rule 7 (err_stmt)


state 26

    6 err_stmt: error ';' .

    $default  reduce using rule 6 (err_stmt)


state 27

    8 err_stmt: error ')' .

    $default  reduce using rule 8 (err_stmt)


state 28

   21 stmt: IDENTIFIER '=' . expr ';'

    INTNUM       shift, and go to state 34
    FLOATNUM     shift, and go to state 35
    QUOTESTRING  shift, and go to state 36
    IDENTIFIER   shift, and go to state 37
    '('          shift, and go to state 38

    expr  go to state 43


state 29

   22 stmt: WHILE '(' . logic_list ')' stmt

    INTNUM       shift, and go to state 34
    FLOATNUM     shift, and go to state 35
    QUOTESTRING  shift, and go to state 36
    IDENTIFIER   shift, and go to state 37
    '('          shift, and go to state 44

    logic_expr  go to state 45
    logic_list  go to state 46
    expr        go to state 47


state 30

   23 stmt: FOR '(' . stmt logic_list ';' stmt ')' stmt

    IDENTIFIER  shift, and go to state 11
    WHILE       shift, and go to state 12
    FOR         shift, and go to state 13
    REPEAT      shift, and go to state 14
    SWITCH      shift, and go to state 15
    IF          shift, and go to state 16
    PRINT       shift, and go to state 17
    DEF         shift, and go to state 18
    '{'         shift, and go to state 19
    ';'         shift, and go to state 21

    stmt  go to state 48


state 31

   24 stmt: REPEAT stmt . UNTIL '(' logic_list ')' ';'

    UNTIL  shift, and go to state 49


state 32

   25 stmt: SWITCH '(' . expr ')' case_stmt

    INTNUM       shift, and go to state 34
    FLOATNUM     shift, and go to state 35
    QUOTESTRING  shift, and go to state 36
    IDENTIFIER   shift, and go to state 37
    '('          shift, and go to state 38

    expr  go to state 50


state 33

   26 stmt: IF '(' . logic_list ')' stmt
   27     | IF '(' . logic_list ')' stmt ELSE stmt

    INTNUM       shift, and go to state 34
    FLOATNUM     shift, and go to state 35
    QUOTESTRING  shift, and go to state 36
    IDENTIFIER   shift, and go to state 37
    '('          shift, and go to state 44

    logic_expr  go to state 45
    logic_list  go to state 51
    expr        go to state 47


state 34

   47 expr: INTNUM .

    $default  reduce using rule 47 (expr)


state 35

   48 expr: FLOATNUM .

    $default  reduce using rule 48 (expr)


state 36

   49 expr: QUOTESTRING .

    $default  reduce using rule 49 (expr)


state 37

   50 expr: IDENTIFIER .

    $default  reduce using rule 50 (expr)


state 38

   55 expr: '(' . expr ')'

    INTNUM       shift, and go to state 34
    FLOATNUM     shift, and go to state 35
    QUOTESTRING  shift, and go to state 36
    IDENTIFIER   shift, and go to state 37
    '('          shift, and go to state 38

    expr  go to state 52


state 39

   20 stmt: PRINT expr . ';'
   51 expr: expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '*' expr
   54     | expr . '/' expr

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    ';'  shift, and go to state 57


state 40

   10 stmt: DEF IDENTIFIER . AS INT VAR '=' expr ';'
   11     | DEF IDENTIFIER . AS FLOAT VAR '=' expr ';'
   12     | DEF IDENTIFIER . AS STRING VAR '=' expr ';'
   13     | DEF IDENTIFIER . AS INT VAR ';'
   14     | DEF IDENTIFIER . AS FLOAT VAR ';'
   15     | DEF IDENTIFIER . AS STRING VAR ';'
   16     | DEF IDENTIFIER . AS INT CONST '=' expr ';'
   17     | DEF IDENTIFIER . AS FLOAT CONST '=' expr ';'
   18     | DEF IDENTIFIER . AS STRING CONST '=' expr ';'

    AS  shift, and go to state 58


state 41

   29 stmt_list: stmt .

    $default  reduce using rule 29 (stmt_list)


state 42

   28 stmt: '{' stmt_list . '}'
   30 stmt_list: stmt_list . stmt

    IDENTIFIER  shift, and go to state 11
    WHILE       shift, and go to state 12
    FOR         shift, and go to state 13
    REPEAT      shift, and go to state 14
    SWITCH      shift, and go to state 15
    IF          shift, and go to state 16
    PRINT       shift, and go to state 17
    DEF         shift, and go to state 18
    '{'         shift, and go to state 19
    '}'         shift, and go to state 59
    ';'         shift, and go to state 21

    stmt  go to state 60


state 43

   21 stmt: IDENTIFIER '=' expr . ';'
   51 expr: expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '*' expr
   54     | expr . '/' expr

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    ';'  shift, and go to state 61


state 44

   43 logic_expr: '(' . logic_list ')'
   55 expr: '(' . expr ')'

    INTNUM       shift, and go to state 34
    FLOATNUM     shift, and go to state 35
    QUOTESTRING  shift, and go to state 36
    IDENTIFIER   shift, and go to state 37
    '('          shift, and go to state 44

    logic_expr  go to state 45
    logic_list  go to state 62
    expr        go to state 63


state 45

   44 logic_list: logic_expr .

    $default  reduce using rule 44 (logic_list)


state 46

   22 stmt: WHILE '(' logic_list . ')' stmt
   45 logic_list: logic_list . '|' logic_expr
   46           | logic_list . '&' logic_expr

    '&'  shift, and go to state 64
    '|'  shift, and go to state 65
    ')'  shift, and go to state 66


state 47

   37 logic_expr: expr . '<' expr
   38           | expr . '>' expr
   39           | expr . GE expr
   40           | expr . LE expr
   41           | expr . NE expr
   42           | expr . EQ expr
   51 expr: expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '*' expr
   54     | expr . '/' expr

    '>'  shift, and go to state 67
    '<'  shift, and go to state 68
    NE   shift, and go to state 69
    EQ   shift, and go to state 70
    LE   shift, and go to state 71
    GE   shift, and go to state 72
    '+'  shift, and go to state 53
    '-'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56


state 48

   23 stmt: FOR '(' stmt . logic_list ';' stmt ')' stmt

    INTNUM       shift, and go to state 34
    FLOATNUM     shift, and go to state 35
    QUOTESTRING  shift, and go to state 36
    IDENTIFIER   shift, and go to state 37
    '('          shift, and go to state 44

    logic_expr  go to state 45
    logic_list  go to state 73
    expr        go to state 47


state 49

   24 stmt: REPEAT stmt UNTIL . '(' logic_list ')' ';'

    '('  shift, and go to state 74


state 50

   25 stmt: SWITCH '(' expr . ')' case_stmt
   51 expr: expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '*' expr
   54     | expr . '/' expr

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    ')'  shift, and go to state 75


state 51

   26 stmt: IF '(' logic_list . ')' stmt
   27     | IF '(' logic_list . ')' stmt ELSE stmt
   45 logic_list: logic_list . '|' logic_expr
   46           | logic_list . '&' logic_expr

    '&'  shift, and go to state 64
    '|'  shift, and go to state 65
    ')'  shift, and go to state 76


state 52

   51 expr: expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '*' expr
   54     | expr . '/' expr
   55     | '(' expr . ')'

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    ')'  shift, and go to state 77


state 53

   51 expr: expr '+' . expr

    INTNUM       shift, and go to state 34
    FLOATNUM     shift, and go to state 35
    QUOTESTRING  shift, and go to state 36
    IDENTIFIER   shift, and go to state 37
    '('          shift, and go to state 38

    expr  go to state 78


state 54

   52 expr: expr '-' . expr

    INTNUM       shift, and go to state 34
    FLOATNUM     shift, and go to state 35
    QUOTESTRING  shift, and go to state 36
    IDENTIFIER   shift, and go to state 37
    '('          shift, and go to state 38

    expr  go to state 79


state 55

   53 expr: expr '*' . expr

    INTNUM       shift, and go to state 34
    FLOATNUM     shift, and go to state 35
    QUOTESTRING  shift, and go to state 36
    IDENTIFIER   shift, and go to state 37
    '('          shift, and go to state 38

    expr  go to state 80


state 56

   54 expr: expr '/' . expr

    INTNUM       shift, and go to state 34
    FLOATNUM     shift, and go to state 35
    QUOTESTRING  shift, and go to state 36
    IDENTIFIER   shift, and go to state 37
    '('          shift, and go to state 38

    expr  go to state 81


state 57

   20 stmt: PRINT expr ';' .

    $default  reduce using rule 20 (stmt)


state 58

   10 stmt: DEF IDENTIFIER AS . INT VAR '=' expr ';'
   11     | DEF IDENTIFIER AS . FLOAT VAR '=' expr ';'
   12     | DEF IDENTIFIER AS . STRING VAR '=' expr ';'
   13     | DEF IDENTIFIER AS . INT VAR ';'
   14     | DEF IDENTIFIER AS . FLOAT VAR ';'
   15     | DEF IDENTIFIER AS . STRING VAR ';'
   16     | DEF IDENTIFIER AS . INT CONST '=' expr ';'
   17     | DEF IDENTIFIER AS . FLOAT CONST '=' expr ';'
   18     | DEF IDENTIFIER AS . STRING CONST '=' expr ';'

    INT     shift, and go to state 82
    FLOAT   shift, and go to state 83
    STRING  shift, and go to state 84


state 59

   28 stmt: '{' stmt_list '}' .

    $default  reduce using rule 28 (stmt)


state 60

   30 stmt_list: stmt_list stmt .

    $default  reduce using rule 30 (stmt_list)


state 61

   21 stmt: IDENTIFIER '=' expr ';' .

    $default  reduce using rule 21 (stmt)


state 62

   43 logic_expr: '(' logic_list . ')'
   45 logic_list: logic_list . '|' logic_expr
   46           | logic_list . '&' logic_expr

    '&'  shift, and go to state 64
    '|'  shift, and go to state 65
    ')'  shift, and go to state 85


state 63

   37 logic_expr: expr . '<' expr
   38           | expr . '>' expr
   39           | expr . GE expr
   40           | expr . LE expr
   41           | expr . NE expr
   42           | expr . EQ expr
   51 expr: expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '*' expr
   54     | expr . '/' expr
   55     | '(' expr . ')'

    '>'  shift, and go to state 67
    '<'  shift, and go to state 68
    NE   shift, and go to state 69
    EQ   shift, and go to state 70
    LE   shift, and go to state 71
    GE   shift, and go to state 72
    '+'  shift, and go to state 53
    '-'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    ')'  shift, and go to state 77


state 64

   46 logic_list: logic_list '&' . logic_expr

    INTNUM       shift, and go to state 34
    FLOATNUM     shift, and go to state 35
    QUOTESTRING  shift, and go to state 36
    IDENTIFIER   shift, and go to state 37
    '('          shift, and go to state 44

    logic_expr  go to state 86
    expr        go to state 47


state 65

   45 logic_list: logic_list '|' . logic_expr

    INTNUM       shift, and go to state 34
    FLOATNUM     shift, and go to state 35
    QUOTESTRING  shift, and go to state 36
    IDENTIFIER   shift, and go to state 37
    '('          shift, and go to state 44

    logic_expr  go to state 87
    expr        go to state 47


state 66

   22 stmt: WHILE '(' logic_list ')' . stmt

    IDENTIFIER  shift, and go to state 11
    WHILE       shift, and go to state 12
    FOR         shift, and go to state 13
    REPEAT      shift, and go to state 14
    SWITCH      shift, and go to state 15
    IF          shift, and go to state 16
    PRINT       shift, and go to state 17
    DEF         shift, and go to state 18
    '{'         shift, and go to state 19
    ';'         shift, and go to state 21

    stmt  go to state 88


state 67

   38 logic_expr: expr '>' . expr

    INTNUM       shift, and go to state 34
    FLOATNUM     shift, and go to state 35
    QUOTESTRING  shift, and go to state 36
    IDENTIFIER   shift, and go to state 37
    '('          shift, and go to state 38

    expr  go to state 89


state 68

   37 logic_expr: expr '<' . expr

    INTNUM       shift, and go to state 34
    FLOATNUM     shift, and go to state 35
    QUOTESTRING  shift, and go to state 36
    IDENTIFIER   shift, and go to state 37
    '('          shift, and go to state 38

    expr  go to state 90


state 69

   41 logic_expr: expr NE . expr

    INTNUM       shift, and go to state 34
    FLOATNUM     shift, and go to state 35
    QUOTESTRING  shift, and go to state 36
    IDENTIFIER   shift, and go to state 37
    '('          shift, and go to state 38

    expr  go to state 91


state 70

   42 logic_expr: expr EQ . expr

    INTNUM       shift, and go to state 34
    FLOATNUM     shift, and go to state 35
    QUOTESTRING  shift, and go to state 36
    IDENTIFIER   shift, and go to state 37
    '('          shift, and go to state 38

    expr  go to state 92


state 71

   40 logic_expr: expr LE . expr

    INTNUM       shift, and go to state 34
    FLOATNUM     shift, and go to state 35
    QUOTESTRING  shift, and go to state 36
    IDENTIFIER   shift, and go to state 37
    '('          shift, and go to state 38

    expr  go to state 93


state 72

   39 logic_expr: expr GE . expr

    INTNUM       shift, and go to state 34
    FLOATNUM     shift, and go to state 35
    QUOTESTRING  shift, and go to state 36
    IDENTIFIER   shift, and go to state 37
    '('          shift, and go to state 38

    expr  go to state 94


state 73

   23 stmt: FOR '(' stmt logic_list . ';' stmt ')' stmt
   45 logic_list: logic_list . '|' logic_expr
   46           | logic_list . '&' logic_expr

    '&'  shift, and go to state 64
    '|'  shift, and go to state 65
    ';'  shift, and go to state 95


state 74

   24 stmt: REPEAT stmt UNTIL '(' . logic_list ')' ';'

    INTNUM       shift, and go to state 34
    FLOATNUM     shift, and go to state 35
    QUOTESTRING  shift, and go to state 36
    IDENTIFIER   shift, and go to state 37
    '('          shift, and go to state 44

    logic_expr  go to state 45
    logic_list  go to state 96
    expr        go to state 47


state 75

   25 stmt: SWITCH '(' expr ')' . case_stmt

    CASE  shift, and go to state 97
    '{'   shift, and go to state 98

    case_stmt  go to state 99


state 76

   26 stmt: IF '(' logic_list ')' . stmt
   27     | IF '(' logic_list ')' . stmt ELSE stmt

    IDENTIFIER  shift, and go to state 11
    WHILE       shift, and go to state 12
    FOR         shift, and go to state 13
    REPEAT      shift, and go to state 14
    SWITCH      shift, and go to state 15
    IF          shift, and go to state 16
    PRINT       shift, and go to state 17
    DEF         shift, and go to state 18
    '{'         shift, and go to state 19
    ';'         shift, and go to state 21

    stmt  go to state 100


state 77

   55 expr: '(' expr ')' .

    $default  reduce using rule 55 (expr)


state 78

   51 expr: expr . '+' expr
   51     | expr '+' expr .
   52     | expr . '-' expr
   53     | expr . '*' expr
   54     | expr . '/' expr

    '*'  shift, and go to state 55
    '/'  shift, and go to state 56

    $default  reduce using rule 51 (expr)


state 79

   51 expr: expr . '+' expr
   52     | expr . '-' expr
   52     | expr '-' expr .
   53     | expr . '*' expr
   54     | expr . '/' expr

    '*'  shift, and go to state 55
    '/'  shift, and go to state 56

    $default  reduce using rule 52 (expr)


state 80

   51 expr: expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '*' expr
   53     | expr '*' expr .
   54     | expr . '/' expr

    $default  reduce using rule 53 (expr)


state 81

   51 expr: expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '*' expr
   54     | expr . '/' expr
   54     | expr '/' expr .

    $default  reduce using rule 54 (expr)


state 82

   10 stmt: DEF IDENTIFIER AS INT . VAR '=' expr ';'
   13     | DEF IDENTIFIER AS INT . VAR ';'
   16     | DEF IDENTIFIER AS INT . CONST '=' expr ';'

    VAR    shift, and go to state 101
    CONST  shift, and go to state 102


state 83

   11 stmt: DEF IDENTIFIER AS FLOAT . VAR '=' expr ';'
   14     | DEF IDENTIFIER AS FLOAT . VAR ';'
   17     | DEF IDENTIFIER AS FLOAT . CONST '=' expr ';'

    VAR    shift, and go to state 103
    CONST  shift, and go to state 104


state 84

   12 stmt: DEF IDENTIFIER AS STRING . VAR '=' expr ';'
   15     | DEF IDENTIFIER AS STRING . VAR ';'
   18     | DEF IDENTIFIER AS STRING . CONST '=' expr ';'

    VAR    shift, and go to state 105
    CONST  shift, and go to state 106


state 85

   43 logic_expr: '(' logic_list ')' .

    $default  reduce using rule 43 (logic_expr)


state 86

   46 logic_list: logic_list '&' logic_expr .

    $default  reduce using rule 46 (logic_list)


state 87

   45 logic_list: logic_list '|' logic_expr .

    $default  reduce using rule 45 (logic_list)


state 88

   22 stmt: WHILE '(' logic_list ')' stmt .

    $default  reduce using rule 22 (stmt)


state 89

   38 logic_expr: expr '>' expr .
   51 expr: expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '*' expr
   54     | expr . '/' expr

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56

    $default  reduce using rule 38 (logic_expr)


state 90

   37 logic_expr: expr '<' expr .
   51 expr: expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '*' expr
   54     | expr . '/' expr

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56

    $default  reduce using rule 37 (logic_expr)


state 91

   41 logic_expr: expr NE expr .
   51 expr: expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '*' expr
   54     | expr . '/' expr

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56

    $default  reduce using rule 41 (logic_expr)


state 92

   42 logic_expr: expr EQ expr .
   51 expr: expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '*' expr
   54     | expr . '/' expr

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56

    $default  reduce using rule 42 (logic_expr)


state 93

   40 logic_expr: expr LE expr .
   51 expr: expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '*' expr
   54     | expr . '/' expr

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56

    $default  reduce using rule 40 (logic_expr)


state 94

   39 logic_expr: expr GE expr .
   51 expr: expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '*' expr
   54     | expr . '/' expr

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56

    $default  reduce using rule 39 (logic_expr)


state 95

   23 stmt: FOR '(' stmt logic_list ';' . stmt ')' stmt

    IDENTIFIER  shift, and go to state 11
    WHILE       shift, and go to state 12
    FOR         shift, and go to state 13
    REPEAT      shift, and go to state 14
    SWITCH      shift, and go to state 15
    IF          shift, and go to state 16
    PRINT       shift, and go to state 17
    DEF         shift, and go to state 18
    '{'         shift, and go to state 19
    ';'         shift, and go to state 21

    stmt  go to state 107


state 96

   24 stmt: REPEAT stmt UNTIL '(' logic_list . ')' ';'
   45 logic_list: logic_list . '|' logic_expr
   46           | logic_list . '&' logic_expr

    '&'  shift, and go to state 64
    '|'  shift, and go to state 65
    ')'  shift, and go to state 108


state 97

   32 case_stmt: CASE . '(' expr ')' stmt

    '('  shift, and go to state 109


state 98

   33 case_stmt: '{' . case_list '}'
   34          | '{' . case_list defult_stmt '}'

    CASE  shift, and go to state 97
    '{'   shift, and go to state 98

    case_stmt  go to state 110
    case_list  go to state 111


state 99

   25 stmt: SWITCH '(' expr ')' case_stmt .

    $default  reduce using rule 25 (stmt)


state 100

   26 stmt: IF '(' logic_list ')' stmt .
   27     | IF '(' logic_list ')' stmt . ELSE stmt

    ELSE  shift, and go to state 112

    $default  reduce using rule 26 (stmt)


state 101

   10 stmt: DEF IDENTIFIER AS INT VAR . '=' expr ';'
   13     | DEF IDENTIFIER AS INT VAR . ';'

    ';'  shift, and go to state 113
    '='  shift, and go to state 114


state 102

   16 stmt: DEF IDENTIFIER AS INT CONST . '=' expr ';'

    '='  shift, and go to state 115


state 103

   11 stmt: DEF IDENTIFIER AS FLOAT VAR . '=' expr ';'
   14     | DEF IDENTIFIER AS FLOAT VAR . ';'

    ';'  shift, and go to state 116
    '='  shift, and go to state 117


state 104

   17 stmt: DEF IDENTIFIER AS FLOAT CONST . '=' expr ';'

    '='  shift, and go to state 118


state 105

   12 stmt: DEF IDENTIFIER AS STRING VAR . '=' expr ';'
   15     | DEF IDENTIFIER AS STRING VAR . ';'

    ';'  shift, and go to state 119
    '='  shift, and go to state 120


state 106

   18 stmt: DEF IDENTIFIER AS STRING CONST . '=' expr ';'

    '='  shift, and go to state 121


state 107

   23 stmt: FOR '(' stmt logic_list ';' stmt . ')' stmt

    ')'  shift, and go to state 122


state 108

   24 stmt: REPEAT stmt UNTIL '(' logic_list ')' . ';'

    ';'  shift, and go to state 123


state 109

   32 case_stmt: CASE '(' . expr ')' stmt

    INTNUM       shift, and go to state 34
    FLOATNUM     shift, and go to state 35
    QUOTESTRING  shift, and go to state 36
    IDENTIFIER   shift, and go to state 37
    '('          shift, and go to state 38

    expr  go to state 124


state 110

   35 case_list: case_stmt .

    $default  reduce using rule 35 (case_list)


state 111

   33 case_stmt: '{' case_list . '}'
   34          | '{' case_list . defult_stmt '}'
   36 case_list: case_list . case_stmt

    CASE     shift, and go to state 97
    DEFAULT  shift, and go to state 125
    '{'      shift, and go to state 98
    '}'      shift, and go to state 126

    defult_stmt  go to state 127
    case_stmt    go to state 128


state 112

   27 stmt: IF '(' logic_list ')' stmt ELSE . stmt

    IDENTIFIER  shift, and go to state 11
    WHILE       shift, and go to state 12
    FOR         shift, and go to state 13
    REPEAT      shift, and go to state 14
    SWITCH      shift, and go to state 15
    IF          shift, and go to state 16
    PRINT       shift, and go to state 17
    DEF         shift, and go to state 18
    '{'         shift, and go to state 19
    ';'         shift, and go to state 21

    stmt  go to state 129


state 113

   13 stmt: DEF IDENTIFIER AS INT VAR ';' .

    $default  reduce using rule 13 (stmt)


state 114

   10 stmt: DEF IDENTIFIER AS INT VAR '=' . expr ';'

    INTNUM       shift, and go to state 34
    FLOATNUM     shift, and go to state 35
    QUOTESTRING  shift, and go to state 36
    IDENTIFIER   shift, and go to state 37
    '('          shift, and go to state 38

    expr  go to state 130


state 115

   16 stmt: DEF IDENTIFIER AS INT CONST '=' . expr ';'

    INTNUM       shift, and go to state 34
    FLOATNUM     shift, and go to state 35
    QUOTESTRING  shift, and go to state 36
    IDENTIFIER   shift, and go to state 37
    '('          shift, and go to state 38

    expr  go to state 131


state 116

   14 stmt: DEF IDENTIFIER AS FLOAT VAR ';' .

    $default  reduce using rule 14 (stmt)


state 117

   11 stmt: DEF IDENTIFIER AS FLOAT VAR '=' . expr ';'

    INTNUM       shift, and go to state 34
    FLOATNUM     shift, and go to state 35
    QUOTESTRING  shift, and go to state 36
    IDENTIFIER   shift, and go to state 37
    '('          shift, and go to state 38

    expr  go to state 132


state 118

   17 stmt: DEF IDENTIFIER AS FLOAT CONST '=' . expr ';'

    INTNUM       shift, and go to state 34
    FLOATNUM     shift, and go to state 35
    QUOTESTRING  shift, and go to state 36
    IDENTIFIER   shift, and go to state 37
    '('          shift, and go to state 38

    expr  go to state 133


state 119

   15 stmt: DEF IDENTIFIER AS STRING VAR ';' .

    $default  reduce using rule 15 (stmt)


state 120

   12 stmt: DEF IDENTIFIER AS STRING VAR '=' . expr ';'

    INTNUM       shift, and go to state 34
    FLOATNUM     shift, and go to state 35
    QUOTESTRING  shift, and go to state 36
    IDENTIFIER   shift, and go to state 37
    '('          shift, and go to state 38

    expr  go to state 134


state 121

   18 stmt: DEF IDENTIFIER AS STRING CONST '=' . expr ';'

    INTNUM       shift, and go to state 34
    FLOATNUM     shift, and go to state 35
    QUOTESTRING  shift, and go to state 36
    IDENTIFIER   shift, and go to state 37
    '('          shift, and go to state 38

    expr  go to state 135


state 122

   23 stmt: FOR '(' stmt logic_list ';' stmt ')' . stmt

    IDENTIFIER  shift, and go to state 11
    WHILE       shift, and go to state 12
    FOR         shift, and go to state 13
    REPEAT      shift, and go to state 14
    SWITCH      shift, and go to state 15
    IF          shift, and go to state 16
    PRINT       shift, and go to state 17
    DEF         shift, and go to state 18
    '{'         shift, and go to state 19
    ';'         shift, and go to state 21

    stmt  go to state 136


state 123

   24 stmt: REPEAT stmt UNTIL '(' logic_list ')' ';' .

    $default  reduce using rule 24 (stmt)


state 124

   32 case_stmt: CASE '(' expr . ')' stmt
   51 expr: expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '*' expr
   54     | expr . '/' expr

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    ')'  shift, and go to state 137


state 125

   31 defult_stmt: DEFAULT . stmt

    IDENTIFIER  shift, and go to state 11
    WHILE       shift, and go to state 12
    FOR         shift, and go to state 13
    REPEAT      shift, and go to state 14
    SWITCH      shift, and go to state 15
    IF          shift, and go to state 16
    PRINT       shift, and go to state 17
    DEF         shift, and go to state 18
    '{'         shift, and go to state 19
    ';'         shift, and go to state 21

    stmt  go to state 138


state 126

   33 case_stmt: '{' case_list '}' .

    $default  reduce using rule 33 (case_stmt)


state 127

   34 case_stmt: '{' case_list defult_stmt . '}'

    '}'  shift, and go to state 139


state 128

   36 case_list: case_list case_stmt .

    $default  reduce using rule 36 (case_list)


state 129

   27 stmt: IF '(' logic_list ')' stmt ELSE stmt .

    $default  reduce using rule 27 (stmt)


state 130

   10 stmt: DEF IDENTIFIER AS INT VAR '=' expr . ';'
   51 expr: expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '*' expr
   54     | expr . '/' expr

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    ';'  shift, and go to state 140


state 131

   16 stmt: DEF IDENTIFIER AS INT CONST '=' expr . ';'
   51 expr: expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '*' expr
   54     | expr . '/' expr

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    ';'  shift, and go to state 141


state 132

   11 stmt: DEF IDENTIFIER AS FLOAT VAR '=' expr . ';'
   51 expr: expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '*' expr
   54     | expr . '/' expr

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    ';'  shift, and go to state 142


state 133

   17 stmt: DEF IDENTIFIER AS FLOAT CONST '=' expr . ';'
   51 expr: expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '*' expr
   54     | expr . '/' expr

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    ';'  shift, and go to state 143


state 134

   12 stmt: DEF IDENTIFIER AS STRING VAR '=' expr . ';'
   51 expr: expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '*' expr
   54     | expr . '/' expr

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    ';'  shift, and go to state 144


state 135

   18 stmt: DEF IDENTIFIER AS STRING CONST '=' expr . ';'
   51 expr: expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '*' expr
   54     | expr . '/' expr

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    ';'  shift, and go to state 145


state 136

   23 stmt: FOR '(' stmt logic_list ';' stmt ')' stmt .

    $default  reduce using rule 23 (stmt)


state 137

   32 case_stmt: CASE '(' expr ')' . stmt

    IDENTIFIER  shift, and go to state 11
    WHILE       shift, and go to state 12
    FOR         shift, and go to state 13
    REPEAT      shift, and go to state 14
    SWITCH      shift, and go to state 15
    IF          shift, and go to state 16
    PRINT       shift, and go to state 17
    DEF         shift, and go to state 18
    '{'         shift, and go to state 19
    ';'         shift, and go to state 21

    stmt  go to state 146


state 138

   31 defult_stmt: DEFAULT stmt .

    $default  reduce using rule 31 (defult_stmt)


state 139

   34 case_stmt: '{' case_list defult_stmt '}' .

    $default  reduce using rule 34 (case_stmt)


state 140

   10 stmt: DEF IDENTIFIER AS INT VAR '=' expr ';' .

    $default  reduce using rule 10 (stmt)


state 141

   16 stmt: DEF IDENTIFIER AS INT CONST '=' expr ';' .

    $default  reduce using rule 16 (stmt)


state 142

   11 stmt: DEF IDENTIFIER AS FLOAT VAR '=' expr ';' .

    $default  reduce using rule 11 (stmt)


state 143

   17 stmt: DEF IDENTIFIER AS FLOAT CONST '=' expr ';' .

    $default  reduce using rule 17 (stmt)


state 144

   12 stmt: DEF IDENTIFIER AS STRING VAR '=' expr ';' .

    $default  reduce using rule 12 (stmt)


state 145

   18 stmt: DEF IDENTIFIER AS STRING CONST '=' expr ';' .

    $default  reduce using rule 18 (stmt)


state 146

   32 case_stmt: CASE '(' expr ')' stmt .

    $default  reduce using rule 32 (case_stmt)
